{
    "sourceFile": "src/store/reportStore.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747022308721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747022402544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import { HistoryItem, ReportLayout, ReportTemplate } from '../types/report';\r\n+import { HistoryItem, ReportLayout, ReportTemplate } from \"../types/report\";\r\n \r\n-import { create } from 'zustand';\r\n+import { create } from \"zustand\";\r\n \r\n interface ReportState {\r\n   currentReport: ReportTemplate | null;\r\n   selectedComponent: string | null;\r\n@@ -28,9 +28,9 @@\n     const { currentReport, history, historyIndex } = get();\r\n     if (!currentReport) return;\r\n     const newHistory = history.slice(0, historyIndex + 1);\r\n     newHistory.push({\r\n-      type: 'add',\r\n+      type: \"add\",\r\n       component,\r\n       timestamp: Date.now(),\r\n     });\r\n     set({\r\n@@ -50,9 +50,9 @@\n     if (componentIndex === -1) return;\r\n     const component = currentReport.layout[componentIndex];\r\n     const newHistory = history.slice(0, historyIndex + 1);\r\n     newHistory.push({\r\n-      type: 'update',\r\n+      type: \"update\",\r\n       component: { ...component, ...data },\r\n       timestamp: Date.now(),\r\n     });\r\n     const newLayout = [...currentReport.layout];\r\n@@ -73,9 +73,9 @@\n     const component = currentReport.layout.find((c) => c.id === id);\r\n     if (!component) return;\r\n     const newHistory = history.slice(0, historyIndex + 1);\r\n     newHistory.push({\r\n-      type: 'delete',\r\n+      type: \"delete\",\r\n       component,\r\n       timestamp: Date.now(),\r\n     });\r\n     set({\r\n@@ -101,5 +101,5 @@\n     const { history, historyIndex } = get();\r\n     if (historyIndex >= history.length - 1) return;\r\n     set({ historyIndex: historyIndex + 1 });\r\n   },\r\n-}));\n\\ No newline at end of file\n+}));\r\n"
                }
            ],
            "date": 1747022308721,
            "name": "Commit-0",
            "content": "import { HistoryItem, ReportLayout, ReportTemplate } from '../types/report';\r\n\r\nimport { create } from 'zustand';\r\n\r\ninterface ReportState {\r\n  currentReport: ReportTemplate | null;\r\n  selectedComponent: string | null;\r\n  history: HistoryItem[];\r\n  historyIndex: number;\r\n  setCurrentReport: (report: ReportTemplate) => void;\r\n  addComponent: (component: ReportLayout) => void;\r\n  updateComponent: (id: string, data: Partial<ReportLayout>) => void;\r\n  deleteComponent: (id: string) => void;\r\n  selectComponent: (id: string | null) => void;\r\n  undo: () => void;\r\n  redo: () => void;\r\n}\r\n\r\nexport const useReportStore = create<ReportState>((set, get) => ({\r\n  currentReport: null,\r\n  selectedComponent: null,\r\n  history: [],\r\n  historyIndex: -1,\r\n\r\n  setCurrentReport: (report) => set({ currentReport: report }),\r\n\r\n  addComponent: (component) => {\r\n    const { currentReport, history, historyIndex } = get();\r\n    if (!currentReport) return;\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      type: 'add',\r\n      component,\r\n      timestamp: Date.now(),\r\n    });\r\n    set({\r\n      currentReport: {\r\n        ...currentReport,\r\n        layout: [...currentReport.layout, component],\r\n      },\r\n      history: newHistory,\r\n      historyIndex: newHistory.length - 1,\r\n    });\r\n  },\r\n\r\n  updateComponent: (id, data) => {\r\n    const { currentReport, history, historyIndex } = get();\r\n    if (!currentReport) return;\r\n    const componentIndex = currentReport.layout.findIndex((c) => c.id === id);\r\n    if (componentIndex === -1) return;\r\n    const component = currentReport.layout[componentIndex];\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      type: 'update',\r\n      component: { ...component, ...data },\r\n      timestamp: Date.now(),\r\n    });\r\n    const newLayout = [...currentReport.layout];\r\n    newLayout[componentIndex] = { ...component, ...data };\r\n    set({\r\n      currentReport: {\r\n        ...currentReport,\r\n        layout: newLayout,\r\n      },\r\n      history: newHistory,\r\n      historyIndex: newHistory.length - 1,\r\n    });\r\n  },\r\n\r\n  deleteComponent: (id) => {\r\n    const { currentReport, history, historyIndex } = get();\r\n    if (!currentReport) return;\r\n    const component = currentReport.layout.find((c) => c.id === id);\r\n    if (!component) return;\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push({\r\n      type: 'delete',\r\n      component,\r\n      timestamp: Date.now(),\r\n    });\r\n    set({\r\n      currentReport: {\r\n        ...currentReport,\r\n        layout: currentReport.layout.filter((c) => c.id !== id),\r\n      },\r\n      history: newHistory,\r\n      historyIndex: newHistory.length - 1,\r\n      selectedComponent: null,\r\n    });\r\n  },\r\n\r\n  selectComponent: (id) => set({ selectedComponent: id }),\r\n\r\n  undo: () => {\r\n    const { historyIndex } = get();\r\n    if (historyIndex < 0) return;\r\n    set({ historyIndex: historyIndex - 1 });\r\n  },\r\n\r\n  redo: () => {\r\n    const { history, historyIndex } = get();\r\n    if (historyIndex >= history.length - 1) return;\r\n    set({ historyIndex: historyIndex + 1 });\r\n  },\r\n}));"
        }
    ]
}