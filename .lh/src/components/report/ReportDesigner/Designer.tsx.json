{
    "sourceFile": "src/components/report/ReportDesigner/Designer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1747209822376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747209887979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState } from \"react\";\r\n \r\n import Canvas from \"./components/Canvas\";\r\n-import ResizableWrapper from \"./ResizableWrapper\";\r\n+import ResizableWrapper from \"./components/Canvas/ResizableWrapper\";\r\n \r\n interface ComponentData {\r\n   id: string;\r\n   type: string;\r\n@@ -114,9 +114,9 @@\n             selected={selectedId === comp.id}\r\n             locked={false}\r\n             canvasWidth={CANVAS_WIDTH}\r\n             canvasHeight={CANVAS_HEIGHT}\r\n-            onResize={(x, y, w, h) => handleResize(comp.id, x, y, w, h)}\r\n+            onResize={(x: number, y: number, w: number, h: number) => handleResize(comp.id, x, y, w, h)}\r\n             onSelect={() => setSelectedId(comp.id)}\r\n           >\r\n             {comp.type === \"Button\" ? (\r\n               <button style={{ width: \"100%\", height: \"100%\" }}>按钮</button>\r\n"
                },
                {
                    "date": 1747209896233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState } from \"react\";\r\n \r\n import Canvas from \"./components/Canvas\";\r\n-import ResizableWrapper from \"./components/Canvas/ResizableWrapper\";\r\n+import { ResizableWrapper } from \"./components/Canvas/ResizableWrapper\";\r\n \r\n interface ComponentData {\r\n   id: string;\r\n   type: string;\r\n"
                },
                {
                    "date": 1747209909533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,11 +114,9 @@\n             selected={selectedId === comp.id}\r\n             locked={false}\r\n             canvasWidth={CANVAS_WIDTH}\r\n             canvasHeight={CANVAS_HEIGHT}\r\n-            onResize={(x: number, y: number, w: number, h: number) =>\r\n-              handleResize(comp.id, x, y, w, h)\r\n-            }\r\n+            onResize={(rect) => handleResize(comp.id, rect.x, rect.y, rect.width, rect.height)}\r\n             onSelect={() => setSelectedId(comp.id)}\r\n           >\r\n             {comp.type === \"Button\" ? (\r\n               <button style={{ width: \"100%\", height: \"100%\" }}>按钮</button>\r\n"
                },
                {
                    "date": 1747209921910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,8 @@\n             canvasHeight={CANVAS_HEIGHT}\r\n             onResize={(rect) =>\r\n               handleResize(comp.id, rect.x, rect.y, rect.width, rect.height)\r\n             }\r\n-            onSelect={() => setSelectedId(comp.id)}\r\n           >\r\n             {comp.type === \"Button\" ? (\r\n               <button style={{ width: \"100%\", height: \"100%\" }}>按钮</button>\r\n             ) : comp.type === \"Input\" ? (\r\n"
                }
            ],
            "date": 1747209822375,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\n\r\nimport Canvas from \"./components/Canvas\";\r\nimport ResizableWrapper from \"./ResizableWrapper\";\r\n\r\ninterface ComponentData {\r\n  id: string;\r\n  type: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst COMPONENT_WIDTH = 100;\r\nconst COMPONENT_HEIGHT = 40;\r\nconst CANVAS_WIDTH = 800;\r\nconst CANVAS_HEIGHT = 600;\r\n\r\nconst componentTypes = [\r\n  { type: \"Button\", label: \"按钮\" },\r\n  { type: \"Input\", label: \"输入框\" },\r\n];\r\n\r\nconst Designer: React.FC = () => {\r\n  const [components, setComponents] = useState<ComponentData[]>([]);\r\n  const [selectedId, setSelectedId] = useState<string | null>(null);\r\n\r\n  // 拖拽落盘\r\n  function handleDrop(type: string, x: number, y: number) {\r\n    setComponents(prev => [\r\n      ...prev,\r\n      {\r\n        id: Date.now().toString(),\r\n        type,\r\n        x: Math.max(0, Math.min(x, CANVAS_WIDTH - COMPONENT_WIDTH)),\r\n        y: Math.max(0, Math.min(y, CANVAS_HEIGHT - COMPONENT_HEIGHT)),\r\n        width: COMPONENT_WIDTH,\r\n        height: COMPONENT_HEIGHT,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  // 更新组件位置/尺寸\r\n  function handleResize(id: string, x: number, y: number, width: number, height: number) {\r\n    setComponents(prev =>\r\n      prev.map(item =>\r\n        item.id === id\r\n          ? {\r\n              ...item,\r\n              x: Math.max(0, Math.min(x, CANVAS_WIDTH - width)),\r\n              y: Math.max(0, Math.min(y, CANVAS_HEIGHT - height)),\r\n              width,\r\n              height,\r\n            }\r\n          : item\r\n      )\r\n    );\r\n  }\r\n\r\n  // 取消选中\r\n  function handleCanvasMouseDown(e: React.MouseEvent) {\r\n    if (e.target === e.currentTarget) {\r\n      setSelectedId(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n      {/* 组件库面板 */}\r\n      <div style={{ display: \"flex\", gap: 8, marginBottom: 16 }}>\r\n        {componentTypes.map(item => (\r\n          <div\r\n            key={item.type}\r\n            draggable\r\n            onDragStart={e => e.dataTransfer.setData(\"type\", item.type)}\r\n            style={{\r\n              width: 100,\r\n              height: 40,\r\n              background: \"#eee\",\r\n              textAlign: \"center\",\r\n              lineHeight: \"40px\",\r\n              cursor: \"grab\",\r\n              borderRadius: 4,\r\n              userSelect: \"none\",\r\n            }}\r\n          >\r\n            拖我到画布（{item.label}）\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* 画布 */}\r\n      <Canvas\r\n        width={CANVAS_WIDTH}\r\n        height={CANVAS_HEIGHT}\r\n        onDrop={handleDrop}\r\n      >\r\n        {/* 渲染已落盘组件 */}\r\n        {components.map(comp => (\r\n          <ResizableWrapper\r\n            key={comp.id}\r\n            x={comp.x}\r\n            y={comp.y}\r\n            width={comp.width}\r\n            height={comp.height}\r\n            selected={selectedId === comp.id}\r\n            locked={false}\r\n            canvasWidth={CANVAS_WIDTH}\r\n            canvasHeight={CANVAS_HEIGHT}\r\n            onResize={(x, y, w, h) => handleResize(comp.id, x, y, w, h)}\r\n            onSelect={() => setSelectedId(comp.id)}\r\n          >\r\n            {comp.type === \"Button\" ? (\r\n              <button style={{ width: \"100%\", height: \"100%\" }}>按钮</button>\r\n            ) : comp.type === \"Input\" ? (\r\n              <input style={{ width: \"100%\", height: \"100%\" }} placeholder=\"输入框\" />\r\n            ) : (\r\n              comp.type\r\n            )}\r\n          </ResizableWrapper>\r\n        ))}\r\n      </Canvas>\r\n      {/* 点击空白处取消选中 */}\r\n      <div\r\n        style={{ position: \"absolute\", left: 0, top: 0, width: CANVAS_WIDTH, height: CANVAS_HEIGHT, pointerEvents: \"none\" }}\r\n        onMouseDown={handleCanvasMouseDown}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Designer; "
        }
    ]
}