{
    "sourceFile": "src/components/report/ReportDesigner/components/PrintPreview/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1747403213099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747403242860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n+import ImageWidget from \"../widgets/ImageWidget\";\r\n+import LabelWidget from \"../widgets/LabelWidget\";\r\n import React from \"react\";\r\n+import TableWidget from \"../widgets/TableWidget\";\r\n+import TextWidget from \"../widgets/TextWidget\";\r\n import { useReportDesignerStore } from \"@report/ReportDesigner/store\";\r\n-import LabelWidget from \"../widgets/LabelWidget\";\r\n-import TextWidget from \"../widgets/TextWidget\";\r\n-import ImageWidget from \"../widgets/ImageWidget\";\r\n-import TableWidget from \"../widgets/TableWidget\";\r\n+\r\n // 如有其它控件类型可继续引入\r\n \r\n const widgetMap: Record<string, any> = {\r\n   label: LabelWidget,\r\n"
                },
                {
                    "date": 1747403968730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n         height: canvasConfig.height,\r\n         background: \"#fff\",\r\n         position: \"relative\",\r\n         margin: \"0 auto\",\r\n-        boxShadow: \"0 0 8px #ccc\",\r\n         overflow: \"hidden\",\r\n       }}\r\n     >\r\n       {components\r\n"
                },
                {
                    "date": 1747404096787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import ImageWidget from \"../widgets/ImageWidget\";\r\n import LabelWidget from \"../widgets/LabelWidget\";\r\n-import React from \"react\";\r\n+import React, { useState } from \"react\";\r\n import TableWidget from \"../widgets/TableWidget\";\r\n import TextWidget from \"../widgets/TextWidget\";\r\n import { useReportDesignerStore } from \"@report/ReportDesigner/store\";\r\n+import { Pagination } from \"antd\";\r\n+import { useDataSourceStore } from \"@report/ReportDesigner/store/dataSourceStore\";\r\n \r\n // 如有其它控件类型可继续引入\r\n \r\n const widgetMap: Record<string, any> = {\r\n@@ -17,40 +19,62 @@\n \r\n export default function PrintPreview() {\r\n   const components = useReportDesignerStore((s) => s.components);\r\n   const canvasConfig = useReportDesignerStore((s) => s.canvasConfig);\r\n+  const dataSources = useDataSourceStore((s) => s.dataSources);\r\n+  // 假设主数据源为\"users\"\r\n+  const usersDS = dataSources.find((ds) => ds.key === \"users\");\r\n+  const users = usersDS?.data || [];\r\n+  const [current, setCurrent] = useState(1);\r\n+  const pageSize = 1; // 每页1个用户，可扩展\r\n+  const total = users.length;\r\n+  const currentUser = users[(current - 1) * pageSize];\r\n \r\n+  // 只渲染当前用户的所有控件\r\n   return (\r\n     <div\r\n       style={{\r\n         width: canvasConfig.width,\r\n         height: canvasConfig.height,\r\n         background: \"#fff\",\r\n         position: \"relative\",\r\n         margin: \"0 auto\",\r\n+        boxShadow: \"0 0 8px #ccc\",\r\n         overflow: \"hidden\",\r\n       }}\r\n     >\r\n-      {components\r\n-        .filter((c) => c.visible !== false)\r\n-        .map((comp) => {\r\n-          const Comp = widgetMap[comp.type];\r\n-          if (!Comp) return null;\r\n-          return (\r\n-            <div\r\n-              key={comp.id}\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                left: comp.x,\r\n-                top: comp.y,\r\n-                width: comp.width,\r\n-                height: comp.height,\r\n-                pointerEvents: \"none\",\r\n-              }}\r\n-            >\r\n-              <Comp componentId={comp.id} />\r\n-            </div>\r\n-          );\r\n-        })}\r\n+      {currentUser &&\r\n+        components\r\n+          .filter((c) => c.visible !== false)\r\n+          .map((comp) => {\r\n+            const Comp = widgetMap[comp.type];\r\n+            if (!Comp) return null;\r\n+            return (\r\n+              <div\r\n+                key={comp.id}\r\n+                style={{\r\n+                  position: \"absolute\",\r\n+                  left: comp.x,\r\n+                  top: comp.y,\r\n+                  width: comp.width,\r\n+                  height: comp.height,\r\n+                  pointerEvents: \"none\",\r\n+                }}\r\n+              >\r\n+                {/* 传递当前用户数据作为props，控件内部可按需使用 */}\r\n+                <Comp componentId={comp.id} user={currentUser} />\r\n+              </div>\r\n+            );\r\n+          })}\r\n+      {/* 分页控件 */}\r\n+      <div style={{ position: \"absolute\", bottom: 16, left: 0, width: \"100%\", textAlign: \"center\" }}>\r\n+        <Pagination\r\n+          current={current}\r\n+          pageSize={pageSize}\r\n+          total={total}\r\n+          onChange={setCurrent}\r\n+          showSizeChanger={false}\r\n+        />\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1747404114823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n+import React, { useState } from \"react\";\r\n+\r\n import ImageWidget from \"../widgets/ImageWidget\";\r\n import LabelWidget from \"../widgets/LabelWidget\";\r\n-import React, { useState } from \"react\";\r\n+import { Pagination } from \"antd\";\r\n import TableWidget from \"../widgets/TableWidget\";\r\n import TextWidget from \"../widgets/TextWidget\";\r\n+import { useDataSourceStore } from \"@report/ReportDesigner/store/dataSourceStore\";\r\n import { useReportDesignerStore } from \"@report/ReportDesigner/store\";\r\n-import { Pagination } from \"antd\";\r\n-import { useDataSourceStore } from \"@report/ReportDesigner/store/dataSourceStore\";\r\n \r\n // 如有其它控件类型可继续引入\r\n \r\n const widgetMap: Record<string, any> = {\r\n@@ -37,9 +38,8 @@\n         height: canvasConfig.height,\r\n         background: \"#fff\",\r\n         position: \"relative\",\r\n         margin: \"0 auto\",\r\n-        boxShadow: \"0 0 8px #ccc\",\r\n         overflow: \"hidden\",\r\n       }}\r\n     >\r\n       {currentUser &&\r\n"
                },
                {
                    "date": 1747404120124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,17 @@\n               </div>\r\n             );\r\n           })}\r\n       {/* 分页控件 */}\r\n-      <div style={{ position: \"absolute\", bottom: 16, left: 0, width: \"100%\", textAlign: \"center\" }}>\r\n+      <div\r\n+        style={{\r\n+          position: \"absolute\",\r\n+          bottom: 16,\r\n+          left: 0,\r\n+          width: \"100%\",\r\n+          textAlign: \"center\",\r\n+        }}\r\n+      >\r\n         <Pagination\r\n           current={current}\r\n           pageSize={pageSize}\r\n           total={total}\r\n"
                },
                {
                    "date": 1747404170605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,27 @@\n           .filter((c) => c.visible !== false)\r\n           .map((comp) => {\r\n             const Comp = widgetMap[comp.type];\r\n             if (!Comp) return null;\r\n+            // 如果是TableWidget，自动传递当前用户orders作为dataSource\r\n+            if (comp.type === \"table\") {\r\n+              return (\r\n+                <div\r\n+                  key={comp.id}\r\n+                  style={{\r\n+                    position: \"absolute\",\r\n+                    left: comp.x,\r\n+                    top: comp.y,\r\n+                    width: comp.width,\r\n+                    height: comp.height,\r\n+                    pointerEvents: \"none\",\r\n+                  }}\r\n+                >\r\n+                  <Comp componentId={comp.id} dataSource={currentUser.orders || []} />\r\n+                </div>\r\n+              );\r\n+            }\r\n+            // 其它控件保持原props\r\n             return (\r\n               <div\r\n                 key={comp.id}\r\n                 style={{\r\n@@ -59,9 +78,8 @@\n                   height: comp.height,\r\n                   pointerEvents: \"none\",\r\n                 }}\r\n               >\r\n-                {/* 传递当前用户数据作为props，控件内部可按需使用 */}\r\n                 <Comp componentId={comp.id} user={currentUser} />\r\n               </div>\r\n             );\r\n           })}\r\n"
                },
                {
                    "date": 1747404192172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,12 @@\n                     height: comp.height,\r\n                     pointerEvents: \"none\",\r\n                   }}\r\n                 >\r\n-                  <Comp componentId={comp.id} dataSource={currentUser.orders || []} />\r\n+                  <Comp\r\n+                    componentId={comp.id}\r\n+                    dataSource={currentUser.orders || []}\r\n+                  />\r\n                 </div>\r\n               );\r\n             }\r\n             // 其它控件保持原props\r\n"
                },
                {
                    "date": 1747404417580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,17 +21,20 @@\n export default function PrintPreview() {\r\n   const components = useReportDesignerStore((s) => s.components);\r\n   const canvasConfig = useReportDesignerStore((s) => s.canvasConfig);\r\n   const dataSources = useDataSourceStore((s) => s.dataSources);\r\n-  // 假设主数据源为\"users\"\r\n+  // 只取第一个用户（如张三）\r\n   const usersDS = dataSources.find((ds) => ds.key === \"users\");\r\n   const users = usersDS?.data || [];\r\n-  const [current, setCurrent] = useState(1);\r\n-  const pageSize = 1; // 每页1个用户，可扩展\r\n-  const total = users.length;\r\n-  const currentUser = users[(current - 1) * pageSize];\r\n+  const currentUser = users[0];\r\n \r\n-  // 只渲染当前用户的所有控件\r\n+  // 明细表分页\r\n+  const orders = currentUser?.orders || [];\r\n+  const orderPageSize = 5;\r\n+  const [orderPage, setOrderPage] = useState(1);\r\n+  const orderTotalPages = Math.ceil(orders.length / orderPageSize);\r\n+  const pageOrders = orders.slice((orderPage - 1) * orderPageSize, orderPage * orderPageSize);\r\n+\r\n   return (\r\n     <div\r\n       style={{\r\n         width: canvasConfig.width,\r\n@@ -47,9 +50,8 @@\n           .filter((c) => c.visible !== false)\r\n           .map((comp) => {\r\n             const Comp = widgetMap[comp.type];\r\n             if (!Comp) return null;\r\n-            // 如果是TableWidget，自动传递当前用户orders作为dataSource\r\n             if (comp.type === \"table\") {\r\n               return (\r\n                 <div\r\n                   key={comp.id}\r\n@@ -61,16 +63,12 @@\n                     height: comp.height,\r\n                     pointerEvents: \"none\",\r\n                   }}\r\n                 >\r\n-                  <Comp\r\n-                    componentId={comp.id}\r\n-                    dataSource={currentUser.orders || []}\r\n-                  />\r\n+                  <Comp componentId={comp.id} dataSource={pageOrders} />\r\n                 </div>\r\n               );\r\n             }\r\n-            // 其它控件保持原props\r\n             return (\r\n               <div\r\n                 key={comp.id}\r\n                 style={{\r\n@@ -85,25 +83,19 @@\n                 <Comp componentId={comp.id} user={currentUser} />\r\n               </div>\r\n             );\r\n           })}\r\n-      {/* 分页控件 */}\r\n-      <div\r\n-        style={{\r\n-          position: \"absolute\",\r\n-          bottom: 16,\r\n-          left: 0,\r\n-          width: \"100%\",\r\n-          textAlign: \"center\",\r\n-        }}\r\n-      >\r\n-        <Pagination\r\n-          current={current}\r\n-          pageSize={pageSize}\r\n-          total={total}\r\n-          onChange={setCurrent}\r\n-          showSizeChanger={false}\r\n-        />\r\n-      </div>\r\n+      {/* 明细表分页控件 */}\r\n+      {orders.length > orderPageSize && (\r\n+        <div style={{ position: \"absolute\", bottom: 16, left: 0, width: \"100%\", textAlign: \"center\" }}>\r\n+          <Pagination\r\n+            current={orderPage}\r\n+            pageSize={orderPageSize}\r\n+            total={orders.length}\r\n+            onChange={setOrderPage}\r\n+            showSizeChanger={false}\r\n+          />\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1747404428131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,9 @@\n   // 明细表分页\r\n   const orders = currentUser?.orders || [];\r\n   const orderPageSize = 5;\r\n   const [orderPage, setOrderPage] = useState(1);\r\n-  const orderTotalPages = Math.ceil(orders.length / orderPageSize);\r\n-  const pageOrders = orders.slice(\r\n-    (orderPage - 1) * orderPageSize,\r\n-    orderPage * orderPageSize\r\n-  );\r\n+  const pageOrders = orders.slice((orderPage - 1) * orderPageSize, orderPage * orderPageSize);\r\n \r\n   return (\r\n     <div\r\n       style={{\r\n"
                },
                {
                    "date": 1747404537684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n-import React, { useState } from \"react\";\r\n-\r\n import ImageWidget from \"../widgets/ImageWidget\";\r\n import LabelWidget from \"../widgets/LabelWidget\";\r\n import { Pagination } from \"antd\";\r\n+import React from \"react\";\r\n import TableWidget from \"../widgets/TableWidget\";\r\n import TextWidget from \"../widgets/TextWidget\";\r\n import { useDataSourceStore } from \"@report/ReportDesigner/store/dataSourceStore\";\r\n import { useReportDesignerStore } from \"@report/ReportDesigner/store\";\r\n@@ -17,9 +16,14 @@\n   table: TableWidget,\r\n   // ...其它类型\r\n };\r\n \r\n-export default function PrintPreview() {\r\n+interface PrintPreviewProps {\r\n+  orderPage: number;\r\n+  setOrderPage: (page: number) => void;\r\n+}\r\n+\r\n+export default function PrintPreview({ orderPage, setOrderPage }: PrintPreviewProps) {\r\n   const components = useReportDesignerStore((s) => s.components);\r\n   const canvasConfig = useReportDesignerStore((s) => s.canvasConfig);\r\n   const dataSources = useDataSourceStore((s) => s.dataSources);\r\n   // 只取第一个用户（如张三）\r\n@@ -29,13 +33,9 @@\n \r\n   // 明细表分页\r\n   const orders = currentUser?.orders || [];\r\n   const orderPageSize = 5;\r\n-  const [orderPage, setOrderPage] = useState(1);\r\n-  const pageOrders = orders.slice(\r\n-    (orderPage - 1) * orderPageSize,\r\n-    orderPage * orderPageSize\r\n-  );\r\n+  const pageOrders = orders.slice((orderPage - 1) * orderPageSize, orderPage * orderPageSize);\r\n \r\n   return (\r\n     <div\r\n       style={{\r\n@@ -86,21 +86,13 @@\n               </div>\r\n             );\r\n           })}\r\n       {/* 明细表分页控件 */}\r\n-      {orders.length > orderPageSize && (\r\n-        <div\r\n-          style={{\r\n-            position: \"absolute\",\r\n-            bottom: 16,\r\n-            left: 0,\r\n-            width: \"100%\",\r\n-            textAlign: \"center\",\r\n-          }}\r\n-        >\r\n+      {orders.length > 5 && (\r\n+        <div style={{ position: \"absolute\", bottom: 16, left: 0, width: \"100%\", textAlign: \"center\" }}>\r\n           <Pagination\r\n             current={orderPage}\r\n-            pageSize={orderPageSize}\r\n+            pageSize={5}\r\n             total={orders.length}\r\n             onChange={setOrderPage}\r\n             showSizeChanger={false}\r\n           />\r\n"
                }
            ],
            "date": 1747403213099,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { useReportDesignerStore } from \"@report/ReportDesigner/store\";\r\nimport LabelWidget from \"../widgets/LabelWidget\";\r\nimport TextWidget from \"../widgets/TextWidget\";\r\nimport ImageWidget from \"../widgets/ImageWidget\";\r\nimport TableWidget from \"../widgets/TableWidget\";\r\n// 如有其它控件类型可继续引入\r\n\r\nconst widgetMap: Record<string, any> = {\r\n  label: LabelWidget,\r\n  text: TextWidget,\r\n  image: ImageWidget,\r\n  table: TableWidget,\r\n  // ...其它类型\r\n};\r\n\r\nexport default function PrintPreview() {\r\n  const components = useReportDesignerStore((s) => s.components);\r\n  const canvasConfig = useReportDesignerStore((s) => s.canvasConfig);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: canvasConfig.width,\r\n        height: canvasConfig.height,\r\n        background: \"#fff\",\r\n        position: \"relative\",\r\n        margin: \"0 auto\",\r\n        boxShadow: \"0 0 8px #ccc\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {components\r\n        .filter((c) => c.visible !== false)\r\n        .map((comp) => {\r\n          const Comp = widgetMap[comp.type];\r\n          if (!Comp) return null;\r\n          return (\r\n            <div\r\n              key={comp.id}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: comp.x,\r\n                top: comp.y,\r\n                width: comp.width,\r\n                height: comp.height,\r\n                pointerEvents: \"none\",\r\n              }}\r\n            >\r\n              <Comp componentId={comp.id} />\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}