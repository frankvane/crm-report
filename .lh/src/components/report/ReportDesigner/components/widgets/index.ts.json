{
    "sourceFile": "src/components/report/ReportDesigner/components/widgets/index.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747568084144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747568675064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,9 @@\n-import { ImageWidgetMeta } from './ImageWidget';\r\n-import { LabelWidgetMeta } from './LabelWidget';\r\n-import { QRCodeWidgetMeta } from './QRCodeWidget';\r\n-import { TableWidgetMeta } from './TableWidget';\r\n-import { registerComponent } from '../../componentRegistry';\r\n+import { ImageWidgetMeta } from \"./ImageWidget\";\r\n+import { LabelWidgetMeta } from \"./LabelWidget\";\r\n+import { QRCodeWidgetMeta } from \"./QRCodeWidget\";\r\n+import { TableWidgetMeta } from \"./TableWidget\";\r\n+import { registerComponent } from \"../../componentRegistry\";\r\n \r\n-[\r\n\\ No newline at end of file\n-  TableWidgetMeta,\r\n-  LabelWidgetMeta,\r\n-  ImageWidgetMeta,\r\n-  QRCodeWidgetMeta,\r\n-].forEach(registerComponent);\n+[TableWidgetMeta, LabelWidgetMeta, ImageWidgetMeta, QRCodeWidgetMeta].forEach(\r\n+  registerComponent\r\n+);\r\n"
                },
                {
                    "date": 1747574210271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,29 @@\n-import { ImageWidgetMeta } from \"./ImageWidget\";\r\n-import { LabelWidgetMeta } from \"./LabelWidget\";\r\n-import { QRCodeWidgetMeta } from \"./QRCodeWidget\";\r\n-import { TableWidgetMeta } from \"./TableWidget\";\r\n-import { registerComponent } from \"../../componentRegistry\";\r\n+import { componentRegistry, registerComponent } from '../../componentRegistry';\r\n \r\n-[TableWidgetMeta, LabelWidgetMeta, ImageWidgetMeta, QRCodeWidgetMeta].forEach(\r\n-  registerComponent\r\n-);\r\n+// 使用 import.meta.glob 扫描 widgets 目录下所有 .tsx 文件\r\n+// eager: true 表示直接导入模块，而不是返回一个加载函数\r\n+const modules = import.meta.glob('./*.tsx', { eager: true }) as Record<string, any>;\r\n+\r\n+// 遍历所有导入的模块，查找并注册 WidgetMeta\r\n+for (const path in modules) {\r\n+  const module = modules[path];\r\n+  // 假设每个 Widget 文件都导出了一个以 Meta 结尾的元数据对象\r\n+  for (const exportName in module) {\r\n+    if (exportName.endsWith('Meta')) {\r\n+      const widgetMeta = module[exportName];\r\n+      // 再次检查 widgetMeta 是否符合 IReportComponent 类型结构\r\n+      if (widgetMeta && typeof widgetMeta.type === 'string' && widgetMeta.Component) {\r\n+         // 确认 icon 也是必须的字段\r\n+        if (widgetMeta.icon !== undefined) {\r\n+           registerComponent(widgetMeta);\r\n+        } else {\r\n+          console.warn(`Widget module at ${path} exports ${exportName} missing icon property.`);\r\n+        }\r\n+      } else {\r\n+          console.warn(`Widget module at ${path} exports ${exportName} not a valid widget meta object.`);\r\n+      }\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+console.log('Widgets registered automatically:', Object.keys(componentRegistry));\r\n"
                },
                {
                    "date": 1747574241574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,43 @@\n-import { componentRegistry, registerComponent } from '../../componentRegistry';\r\n+import { componentRegistry, registerComponent } from \"../../componentRegistry\";\r\n \r\n // 使用 import.meta.glob 扫描 widgets 目录下所有 .tsx 文件\r\n // eager: true 表示直接导入模块，而不是返回一个加载函数\r\n-const modules = import.meta.glob('./*.tsx', { eager: true }) as Record<string, any>;\r\n+const modules = import.meta.glob(\"./*.tsx\", { eager: true }) as Record<\r\n+  string,\r\n+  any\r\n+>;\r\n \r\n // 遍历所有导入的模块，查找并注册 WidgetMeta\r\n for (const path in modules) {\r\n   const module = modules[path];\r\n   // 假设每个 Widget 文件都导出了一个以 Meta 结尾的元数据对象\r\n   for (const exportName in module) {\r\n-    if (exportName.endsWith('Meta')) {\r\n+    if (exportName.endsWith(\"Meta\")) {\r\n       const widgetMeta = module[exportName];\r\n       // 再次检查 widgetMeta 是否符合 IReportComponent 类型结构\r\n-      if (widgetMeta && typeof widgetMeta.type === 'string' && widgetMeta.Component) {\r\n-         // 确认 icon 也是必须的字段\r\n+      if (\r\n+        widgetMeta &&\r\n+        typeof widgetMeta.type === \"string\" &&\r\n+        widgetMeta.Component\r\n+      ) {\r\n+        // 确认 icon 也是必须的字段\r\n         if (widgetMeta.icon !== undefined) {\r\n-           registerComponent(widgetMeta);\r\n+          registerComponent(widgetMeta);\r\n         } else {\r\n-          console.warn(`Widget module at ${path} exports ${exportName} missing icon property.`);\r\n+          console.warn(\r\n+            `Widget module at ${path} exports ${exportName} missing icon property.`\r\n+          );\r\n         }\r\n       } else {\r\n-          console.warn(`Widget module at ${path} exports ${exportName} not a valid widget meta object.`);\r\n+        console.warn(\r\n+          `Widget module at ${path} exports ${exportName} not a valid widget meta object.`\r\n+        );\r\n       }\r\n     }\r\n   }\r\n }\r\n \r\n-console.log('Widgets registered automatically:', Object.keys(componentRegistry));\r\n+console.log(\r\n+  \"Widgets registered automatically:\",\r\n+  Object.keys(componentRegistry)\r\n+);\r\n"
                }
            ],
            "date": 1747568084144,
            "name": "Commit-0",
            "content": "import { ImageWidgetMeta } from './ImageWidget';\r\nimport { LabelWidgetMeta } from './LabelWidget';\r\nimport { QRCodeWidgetMeta } from './QRCodeWidget';\r\nimport { TableWidgetMeta } from './TableWidget';\r\nimport { registerComponent } from '../../componentRegistry';\r\n\r\n[\r\n  TableWidgetMeta,\r\n  LabelWidgetMeta,\r\n  ImageWidgetMeta,\r\n  QRCodeWidgetMeta,\r\n].forEach(registerComponent);"
        }
    ]
}