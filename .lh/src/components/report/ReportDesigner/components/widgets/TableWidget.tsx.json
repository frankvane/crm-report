{
    "sourceFile": "src/components/report/ReportDesigner/components/widgets/TableWidget.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1747355224193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747356651537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,66 @@\n-import type { ColumnsType } from \"antd/es/table\";\r\n import React from \"react\";\r\n import { Table } from \"antd\";\r\n+import dayjs from \"dayjs\";\r\n+import { formatLabelValue } from \"@report/ReportDesigner/utils\";\r\n+import numeral from \"numeral\";\r\n \r\n+interface TableColumnConfig {\r\n+  field: string;\r\n+  label: string;\r\n+  format?: string;\r\n+  expression?: string;\r\n+  width?: number;\r\n+  align?: \"left\" | \"center\" | \"right\";\r\n+  visible?: boolean;\r\n+}\r\n+\r\n interface TableWidgetProps {\r\n-  columns?: ColumnsType<any>;\r\n-  dataSource?: any[];\r\n+  columns: TableColumnConfig[];\r\n+  dataSource: any[];\r\n   style?: React.CSSProperties;\r\n }\r\n \r\n-const defaultColumns: ColumnsType<any> = [\r\n-  { title: \"姓名\", dataIndex: \"name\", key: \"name\" },\r\n-  { title: \"年龄\", dataIndex: \"age\", key: \"age\" },\r\n-  { title: \"地址\", dataIndex: \"address\", key: \"address\" },\r\n-];\r\n-\r\n-const defaultData = [\r\n-  { key: 1, name: \"张三\", age: 28, address: \"北京\" },\r\n-  { key: 2, name: \"李四\", age: 32, address: \"上海\" },\r\n-];\r\n-\r\n const TableWidget: React.FC<TableWidgetProps> = ({\r\n-  columns = defaultColumns,\r\n-  dataSource = defaultData,\r\n+  columns = [],\r\n+  dataSource = [],\r\n   style = {},\r\n }) => {\r\n-  // 保证 columns 一定为数组，防止类型错误\r\n-  const safeColumns = Array.isArray(columns) ? columns : defaultColumns;\r\n+  // 只保留 visible 的列，并转换为 antd columns\r\n+  const antdColumns = columns\r\n+    .filter((col) => col.visible !== false)\r\n+    .map((col) => ({\r\n+      title: col.label,\r\n+      dataIndex: col.field,\r\n+      key: col.field,\r\n+      align: col.align,\r\n+      width: col.width,\r\n+      render: (value: any, record: any) => {\r\n+        let displayValue = value;\r\n+        if (col.expression) {\r\n+          try {\r\n+            // eslint-disable-next-line no-new-func\r\n+            const fn = new Function(\"record\", \"value\", col.expression);\r\n+            displayValue = fn(record, value);\r\n+          } catch {\r\n+            // 表达式错误，显示原值\r\n+          }\r\n+        }\r\n+        displayValue = formatLabelValue(displayValue, col, numeral, dayjs);\r\n+        return displayValue;\r\n+      },\r\n+    }));\r\n+\r\n   return (\r\n     <Table\r\n-      columns={safeColumns}\r\n+      columns={antdColumns}\r\n       dataSource={dataSource}\r\n       pagination={false}\r\n       bordered\r\n       size=\"small\"\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n+      rowKey=\"key\"\r\n     />\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747356749316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,14 +16,20 @@\n \r\n interface TableWidgetProps {\r\n   columns: TableColumnConfig[];\r\n   dataSource: any[];\r\n+  pagination?: boolean;\r\n+  bordered?: boolean;\r\n+  size?: \"default\" | \"middle\" | \"small\";\r\n   style?: React.CSSProperties;\r\n }\r\n \r\n const TableWidget: React.FC<TableWidgetProps> = ({\r\n   columns = [],\r\n   dataSource = [],\r\n+  pagination = false,\r\n+  bordered = false,\r\n+  size = \"default\",\r\n   style = {},\r\n }) => {\r\n   // 只保留 visible 的列，并转换为 antd columns\r\n   const antdColumns = columns\r\n@@ -53,11 +59,11 @@\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n       dataSource={dataSource}\r\n-      pagination={false}\r\n-      bordered\r\n-      size=\"small\"\r\n+      pagination={pagination}\r\n+      bordered={bordered}\r\n+      size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n       rowKey=\"key\"\r\n     />\r\n"
                },
                {
                    "date": 1747356848696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,18 +18,18 @@\n   columns: TableColumnConfig[];\r\n   dataSource: any[];\r\n   pagination?: boolean;\r\n   bordered?: boolean;\r\n-  size?: \"default\" | \"middle\" | \"small\";\r\n+  size?: \"middle\" | \"small\";\r\n   style?: React.CSSProperties;\r\n }\r\n \r\n const TableWidget: React.FC<TableWidgetProps> = ({\r\n   columns = [],\r\n   dataSource = [],\r\n   pagination = false,\r\n   bordered = false,\r\n-  size = \"default\",\r\n+  size,\r\n   style = {},\r\n }) => {\r\n   // 只保留 visible 的列，并转换为 antd columns\r\n   const antdColumns = columns\r\n@@ -59,9 +59,9 @@\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n       dataSource={dataSource}\r\n-      pagination={pagination}\r\n+      pagination={pagination ? undefined : false}\r\n       bordered={bordered}\r\n       size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n"
                },
                {
                    "date": 1747358964602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n         return displayValue;\r\n       },\r\n     }));\r\n \r\n+  console.log(antdColumns, dataSource);\r\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n       dataSource={dataSource}\r\n"
                },
                {
                    "date": 1747360101876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Table } from \"antd\";\r\n import dayjs from \"dayjs\";\r\n import { formatLabelValue } from \"@report/ReportDesigner/utils\";\r\n import numeral from \"numeral\";\r\n+import { useDataSourceStore } from \"@/components/report/ReportDesigner/store/dataSourceStore\";\r\n \r\n interface TableColumnConfig {\r\n   field: string;\r\n   label: string;\r\n@@ -15,9 +16,10 @@\n }\r\n \r\n interface TableWidgetProps {\r\n   columns: TableColumnConfig[];\r\n-  dataSource: any[];\r\n+  dataSource?: any[];\r\n+  dataSourceKey?: string;\r\n   pagination?: boolean;\r\n   bordered?: boolean;\r\n   size?: \"middle\" | \"small\";\r\n   style?: React.CSSProperties;\r\n@@ -25,8 +27,9 @@\n \r\n const TableWidget: React.FC<TableWidgetProps> = ({\r\n   columns = [],\r\n   dataSource = [],\r\n+  dataSourceKey,\r\n   pagination = false,\r\n   bordered = false,\r\n   size,\r\n   style = {},\r\n@@ -55,19 +58,27 @@\n         return displayValue;\r\n       },\r\n     }));\r\n \r\n-  console.log(antdColumns, dataSource);\r\n+  // 新增：支持 dataSourceKey，自动从 store 获取数据\r\n+  const dataSources = useDataSourceStore((s) => s.dataSources);\r\n+  const storeDataSource = dataSourceKey\r\n+    ? dataSources.find((ds) => ds.key === dataSourceKey)?.data || []\r\n+    : undefined;\r\n+\r\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n-      dataSource={dataSource}\r\n+      dataSource={storeDataSource !== undefined ? storeDataSource : dataSource}\r\n       pagination={pagination ? undefined : false}\r\n       bordered={bordered}\r\n       size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n-      rowKey=\"key\"\r\n+      rowKey={\r\n+        (record, index) =>\r\n+          record.key || record.id || (columns[0] && record[columns[0].field]) || index\r\n+      }\r\n     />\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747360124652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,13 @@\n       bordered={bordered}\r\n       size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n-      rowKey={\r\n-        (record, index) =>\r\n-          record.key || record.id || (columns[0] && record[columns[0].field]) || index\r\n+      rowKey={(record, index) =>\r\n+        record.key ||\r\n+        record.id ||\r\n+        (columns[0] && record[columns[0].field]) ||\r\n+        index\r\n       }\r\n     />\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1747360136594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,10 @@\n   const storeDataSource = dataSourceKey\r\n     ? dataSources.find((ds) => ds.key === dataSourceKey)?.data || []\r\n     : undefined;\r\n \r\n+  console.log(storeDataSource, dataSource);\r\n+\r\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n       dataSource={storeDataSource !== undefined ? storeDataSource : dataSource}\r\n"
                },
                {
                    "date": 1747360165076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,10 @@\n   const dataSources = useDataSourceStore((s) => s.dataSources);\r\n   const storeDataSource = dataSourceKey\r\n     ? dataSources.find((ds) => ds.key === dataSourceKey)?.data || []\r\n     : undefined;\r\n+    console.log(useDataSourceStore())\r\n \r\n-  console.log(storeDataSource, dataSource);\r\n \r\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n"
                },
                {
                    "date": 1747360551751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,42 +3,41 @@\n import dayjs from \"dayjs\";\r\n import { formatLabelValue } from \"@report/ReportDesigner/utils\";\r\n import numeral from \"numeral\";\r\n import { useDataSourceStore } from \"@/components/report/ReportDesigner/store/dataSourceStore\";\r\n+import { useReportDesignerStore } from \"@/components/report/ReportDesigner/store\";\r\n \r\n-interface TableColumnConfig {\r\n-  field: string;\r\n-  label: string;\r\n-  format?: string;\r\n-  expression?: string;\r\n-  width?: number;\r\n-  align?: \"left\" | \"center\" | \"right\";\r\n-  visible?: boolean;\r\n-}\r\n-\r\n interface TableWidgetProps {\r\n-  columns: TableColumnConfig[];\r\n-  dataSource?: any[];\r\n-  dataSourceKey?: string;\r\n+  componentId: string;\r\n   pagination?: boolean;\r\n   bordered?: boolean;\r\n   size?: \"middle\" | \"small\";\r\n   style?: React.CSSProperties;\r\n }\r\n \r\n const TableWidget: React.FC<TableWidgetProps> = ({\r\n-  columns = [],\r\n-  dataSource = [],\r\n-  dataSourceKey,\r\n+  componentId,\r\n   pagination = false,\r\n   bordered = false,\r\n   size,\r\n   style = {},\r\n }) => {\r\n-  // 只保留 visible 的列，并转换为 antd columns\r\n+  // 1. 获取当前组件配置\r\n+  const component = useReportDesignerStore(\r\n+    (s) => s.components.find((c) => c.id === componentId)\r\n+  );\r\n+  const dataBinding = component?.props?.dataBinding || {};\r\n+  const columns = dataBinding.columns || [];\r\n+  const dataSourceKey = dataBinding.dataSource;\r\n+\r\n+  // 2. 获取数据源\r\n+  const dataSources = useDataSourceStore((s) => s.dataSources);\r\n+  const dataSource = dataSources.find((ds) => ds.key === dataSourceKey)?.data || [];\r\n+\r\n+  // 3. 只保留 visible 的列，并转换为 antd columns\r\n   const antdColumns = columns\r\n-    .filter((col) => col.visible !== false)\r\n-    .map((col) => ({\r\n+    .filter((col: any) => col.visible !== false)\r\n+    .map((col: any) => ({\r\n       title: col.label,\r\n       dataIndex: col.field,\r\n       key: col.field,\r\n       align: col.align,\r\n@@ -58,29 +57,20 @@\n         return displayValue;\r\n       },\r\n     }));\r\n \r\n-  // 新增：支持 dataSourceKey，自动从 store 获取数据\r\n-  const dataSources = useDataSourceStore((s) => s.dataSources);\r\n-  const storeDataSource = dataSourceKey\r\n-    ? dataSources.find((ds) => ds.key === dataSourceKey)?.data || []\r\n-    : undefined;\r\n-  console.log(useDataSourceStore());\r\n-\r\n   return (\r\n     <Table\r\n       columns={antdColumns}\r\n-      dataSource={storeDataSource !== undefined ? storeDataSource : dataSource}\r\n+      dataSource={dataSource}\r\n       pagination={pagination ? undefined : false}\r\n       bordered={bordered}\r\n       size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n-      rowKey={(record, index) =>\r\n-        record.key ||\r\n-        record.id ||\r\n-        (columns[0] && record[columns[0].field]) ||\r\n-        index\r\n+      rowKey={\r\n+        (record: any, index: number) =>\r\n+          record.key || record.id || (columns[0] && record[columns[0].field]) || index\r\n       }\r\n     />\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1747360567654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,9 @@\n   const dataSourceKey = dataBinding.dataSource;\r\n \r\n   // 2. 获取数据源\r\n   const dataSources = useDataSourceStore((s) => s.dataSources);\r\n-  const dataSource =\r\n-    dataSources.find((ds) => ds.key === dataSourceKey)?.data || [];\r\n+  const dataSource = dataSources.find((ds) => ds.key === dataSourceKey)?.data as any[] || [];\r\n \r\n   // 3. 只保留 visible 的列，并转换为 antd columns\r\n   const antdColumns = columns\r\n     .filter((col: any) => col.visible !== false)\r\n@@ -67,13 +66,10 @@\n       bordered={bordered}\r\n       size={size}\r\n       style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n       scroll={{ x: true }}\r\n-      rowKey={(record: any, index: number) =>\r\n-        record.key ||\r\n-        record.id ||\r\n-        (columns[0] && record[columns[0].field]) ||\r\n-        index\r\n+      rowKey={(record: any) =>\r\n+        record.key || record.id || (columns[0] && record[columns[0].field])\r\n       }\r\n     />\r\n   );\r\n };\r\n"
                }
            ],
            "date": 1747355224193,
            "name": "Commit-0",
            "content": "import type { ColumnsType } from \"antd/es/table\";\r\nimport React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\ninterface TableWidgetProps {\r\n  columns?: ColumnsType<any>;\r\n  dataSource?: any[];\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst defaultColumns: ColumnsType<any> = [\r\n  { title: \"姓名\", dataIndex: \"name\", key: \"name\" },\r\n  { title: \"年龄\", dataIndex: \"age\", key: \"age\" },\r\n  { title: \"地址\", dataIndex: \"address\", key: \"address\" },\r\n];\r\n\r\nconst defaultData = [\r\n  { key: 1, name: \"张三\", age: 28, address: \"北京\" },\r\n  { key: 2, name: \"李四\", age: 32, address: \"上海\" },\r\n];\r\n\r\nconst TableWidget: React.FC<TableWidgetProps> = ({\r\n  columns = defaultColumns,\r\n  dataSource = defaultData,\r\n  style = {},\r\n}) => {\r\n  // 保证 columns 一定为数组，防止类型错误\r\n  const safeColumns = Array.isArray(columns) ? columns : defaultColumns;\r\n  return (\r\n    <Table\r\n      columns={safeColumns}\r\n      dataSource={dataSource}\r\n      pagination={false}\r\n      bordered\r\n      size=\"small\"\r\n      style={{ width: \"100%\", ...style, borderRadius: 4 }}\r\n      scroll={{ x: true }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableWidget;\r\n"
        }
    ]
}