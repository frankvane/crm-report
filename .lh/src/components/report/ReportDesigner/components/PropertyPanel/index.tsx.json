{
    "sourceFile": "src/components/report/ReportDesigner/components/PropertyPanel/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1747064079840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747089704688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const { Title } = Typography;\r\n \r\n interface PropertyPanelProps {\r\n   selectedComponent: CanvasComponent | undefined;\r\n-  onChange: (key: string, value: string) => void;\r\n+  onChange: (key: string, value: any) => void;\r\n }\r\n \r\n const PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n   selectedComponent,\r\n@@ -40,8 +40,156 @@\n               border: \"1px solid #d9d9d9\",\r\n               fontSize: 15,\r\n             }}\r\n           />\r\n+          {/* 针对文本组件的 schema 属性渲染 */}\r\n+          {selectedComponent.type === \"text\" && (\r\n+            <>\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>文本内容：</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                value={selectedComponent.text || \"\"}\r\n+                onChange={(e) => onChange(\"text\", e.target.value)}\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              />\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>字体大小：</label>\r\n+              <input\r\n+                type=\"number\"\r\n+                value={selectedComponent.fontSize || 14}\r\n+                min={10}\r\n+                max={100}\r\n+                onChange={(e) => onChange(\"fontSize\", Number(e.target.value))}\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              />\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>字体颜色：</label>\r\n+              <input\r\n+                type=\"color\"\r\n+                value={selectedComponent.color || \"#222222\"}\r\n+                onChange={(e) => onChange(\"color\", e.target.value)}\r\n+                style={{\r\n+                  width: 40,\r\n+                  height: 32,\r\n+                  border: \"none\",\r\n+                  background: \"none\",\r\n+                  padding: 0,\r\n+                }}\r\n+              />\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>字体粗细：</label>\r\n+              <select\r\n+                value={selectedComponent.fontWeight || \"normal\"}\r\n+                onChange={(e) => onChange(\"fontWeight\", e.target.value)}\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              >\r\n+                <option value=\"normal\">正常</option>\r\n+                <option value=\"bold\">加粗</option>\r\n+                <option value=\"bolder\">更粗</option>\r\n+                <option value=\"lighter\">更细</option>\r\n+              </select>\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>对齐方式：</label>\r\n+              <select\r\n+                value={selectedComponent.textAlign || \"left\"}\r\n+                onChange={(e) => onChange(\"textAlign\", e.target.value)}\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              >\r\n+                <option value=\"left\">左对齐</option>\r\n+                <option value=\"center\">居中</option>\r\n+                <option value=\"right\">右对齐</option>\r\n+              </select>\r\n+              {/* 数据绑定区块 */}\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>数据源：</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                value={selectedComponent.dataBinding?.source || \"\"}\r\n+                onChange={(e) =>\r\n+                  onChange(\"dataBinding\", {\r\n+                    ...selectedComponent.dataBinding,\r\n+                    source: e.target.value,\r\n+                  })\r\n+                }\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              />\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>字段：</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                value={selectedComponent.dataBinding?.field || \"\"}\r\n+                onChange={(e) =>\r\n+                  onChange(\"dataBinding\", {\r\n+                    ...selectedComponent.dataBinding,\r\n+                    field: e.target.value,\r\n+                  })\r\n+                }\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              />\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>格式化：</label>\r\n+              <select\r\n+                value={selectedComponent.dataBinding?.format || \"none\"}\r\n+                onChange={(e) =>\r\n+                  onChange(\"dataBinding\", {\r\n+                    ...selectedComponent.dataBinding,\r\n+                    format: e.target.value,\r\n+                  })\r\n+                }\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              >\r\n+                <option value=\"none\">无</option>\r\n+                <option value=\"currency\">金额</option>\r\n+                <option value=\"date\">日期</option>\r\n+                <option value=\"percent\">百分比</option>\r\n+              </select>\r\n+              <label style={{ color: \"#666\", fontSize: 14 }}>表达式：</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                value={selectedComponent.dataBinding?.expression || \"\"}\r\n+                onChange={(e) =>\r\n+                  onChange(\"dataBinding\", {\r\n+                    ...selectedComponent.dataBinding,\r\n+                    expression: e.target.value,\r\n+                  })\r\n+                }\r\n+                style={{\r\n+                  padding: \"6px 10px\",\r\n+                  borderRadius: 4,\r\n+                  border: \"1px solid #d9d9d9\",\r\n+                  fontSize: 15,\r\n+                }}\r\n+              />\r\n+            </>\r\n+          )}\r\n         </form>\r\n       ) : (\r\n         <div style={{ color: \"#aaa\" }}>请选择画布中的组件进行属性编辑</div>\r\n       )}\r\n"
                },
                {
                    "date": 1747089712569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Divider, Typography } from \"antd\";\r\n \r\n-import type { CanvasComponent } from \"./index\";\r\n+import type { CanvasComponent } from \"../../types/index\";\r\n import React from \"react\";\r\n \r\n const { Title } = Typography;\r\n \r\n"
                },
                {
                    "date": 1747089719264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const { Title } = Typography;\r\n \r\n interface PropertyPanelProps {\r\n   selectedComponent: CanvasComponent | undefined;\r\n-  onChange: (key: string, value: any) => void;\r\n+  onChange: (key: string, value: string | number | object) => void;\r\n }\r\n \r\n const PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n   selectedComponent,\r\n"
                },
                {
                    "date": 1747090603945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,200 +1,39 @@\n-import { Divider, Typography } from \"antd\";\r\n-\r\n import type { CanvasComponent } from \"../../types/index\";\r\n+import { Form } from \"@rjsf/antd\";\r\n import React from \"react\";\r\n+import { textComponentSchema } from \"../../schemas/textComponentSchema\";\r\n \r\n-const { Title } = Typography;\r\n-\r\n interface PropertyPanelProps {\r\n   selectedComponent: CanvasComponent | undefined;\r\n-  onChange: (key: string, value: string | number | object) => void;\r\n+  onChange: (formData: any) => void;\r\n }\r\n \r\n const PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n   selectedComponent,\r\n   onChange,\r\n-}) => (\r\n-  <div\r\n-    style={{\r\n-      width: 320,\r\n-      background: \"#fafafa\",\r\n-      borderLeft: \"1px solid #f0f0f0\",\r\n-      padding: 0,\r\n-    }}\r\n-  >\r\n-    <div style={{ padding: 20 }}>\r\n-      <Title level={5} style={{ marginTop: 0 }}>\r\n-        属性面板\r\n-      </Title>\r\n-      <Divider style={{ margin: \"8px 0\" }} />\r\n-      {selectedComponent ? (\r\n-        <form style={{ display: \"flex\", flexDirection: \"column\", gap: 16 }}>\r\n-          <label style={{ color: \"#666\", fontSize: 14 }}>组件名称：</label>\r\n-          <input\r\n-            type=\"text\"\r\n-            value={selectedComponent.name}\r\n-            onChange={(e) => onChange(\"name\", e.target.value)}\r\n-            style={{\r\n-              padding: \"6px 10px\",\r\n-              borderRadius: 4,\r\n-              border: \"1px solid #d9d9d9\",\r\n-              fontSize: 15,\r\n-            }}\r\n-          />\r\n-          {/* 针对文本组件的 schema 属性渲染 */}\r\n-          {selectedComponent.type === \"text\" && (\r\n-            <>\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>文本内容：</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                value={selectedComponent.text || \"\"}\r\n-                onChange={(e) => onChange(\"text\", e.target.value)}\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              />\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>字体大小：</label>\r\n-              <input\r\n-                type=\"number\"\r\n-                value={selectedComponent.fontSize || 14}\r\n-                min={10}\r\n-                max={100}\r\n-                onChange={(e) => onChange(\"fontSize\", Number(e.target.value))}\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              />\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>字体颜色：</label>\r\n-              <input\r\n-                type=\"color\"\r\n-                value={selectedComponent.color || \"#222222\"}\r\n-                onChange={(e) => onChange(\"color\", e.target.value)}\r\n-                style={{\r\n-                  width: 40,\r\n-                  height: 32,\r\n-                  border: \"none\",\r\n-                  background: \"none\",\r\n-                  padding: 0,\r\n-                }}\r\n-              />\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>字体粗细：</label>\r\n-              <select\r\n-                value={selectedComponent.fontWeight || \"normal\"}\r\n-                onChange={(e) => onChange(\"fontWeight\", e.target.value)}\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              >\r\n-                <option value=\"normal\">正常</option>\r\n-                <option value=\"bold\">加粗</option>\r\n-                <option value=\"bolder\">更粗</option>\r\n-                <option value=\"lighter\">更细</option>\r\n-              </select>\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>对齐方式：</label>\r\n-              <select\r\n-                value={selectedComponent.textAlign || \"left\"}\r\n-                onChange={(e) => onChange(\"textAlign\", e.target.value)}\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              >\r\n-                <option value=\"left\">左对齐</option>\r\n-                <option value=\"center\">居中</option>\r\n-                <option value=\"right\">右对齐</option>\r\n-              </select>\r\n-              {/* 数据绑定区块 */}\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>数据源：</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                value={selectedComponent.dataBinding?.source || \"\"}\r\n-                onChange={(e) =>\r\n-                  onChange(\"dataBinding\", {\r\n-                    ...selectedComponent.dataBinding,\r\n-                    source: e.target.value,\r\n-                  })\r\n-                }\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              />\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>字段：</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                value={selectedComponent.dataBinding?.field || \"\"}\r\n-                onChange={(e) =>\r\n-                  onChange(\"dataBinding\", {\r\n-                    ...selectedComponent.dataBinding,\r\n-                    field: e.target.value,\r\n-                  })\r\n-                }\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              />\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>格式化：</label>\r\n-              <select\r\n-                value={selectedComponent.dataBinding?.format || \"none\"}\r\n-                onChange={(e) =>\r\n-                  onChange(\"dataBinding\", {\r\n-                    ...selectedComponent.dataBinding,\r\n-                    format: e.target.value,\r\n-                  })\r\n-                }\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              >\r\n-                <option value=\"none\">无</option>\r\n-                <option value=\"currency\">金额</option>\r\n-                <option value=\"date\">日期</option>\r\n-                <option value=\"percent\">百分比</option>\r\n-              </select>\r\n-              <label style={{ color: \"#666\", fontSize: 14 }}>表达式：</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                value={selectedComponent.dataBinding?.expression || \"\"}\r\n-                onChange={(e) =>\r\n-                  onChange(\"dataBinding\", {\r\n-                    ...selectedComponent.dataBinding,\r\n-                    expression: e.target.value,\r\n-                  })\r\n-                }\r\n-                style={{\r\n-                  padding: \"6px 10px\",\r\n-                  borderRadius: 4,\r\n-                  border: \"1px solid #d9d9d9\",\r\n-                  fontSize: 15,\r\n-                }}\r\n-              />\r\n-            </>\r\n-          )}\r\n-        </form>\r\n-      ) : (\r\n-        <div style={{ color: \"#aaa\" }}>请选择画布中的组件进行属性编辑</div>\r\n-      )}\r\n+}) => {\r\n+  if (!selectedComponent) {\r\n+    return <div style={{ color: \"#aaa\", padding: 20 }}>请选择画布中的组件进行属性编辑</div>;\r\n+  }\r\n+\r\n+  // 这里只处理 text 类型，后续可根据 type 动态切换 schema\r\n+  const schema = textComponentSchema;\r\n+\r\n+  return (\r\n+    <div style={{ width: 320, background: \"#fafafa\", borderLeft: \"1px solid #f0f0f0\", padding: 0 }}>\r\n+      <div style={{ padding: 20 }}>\r\n+        <Form\r\n+          schema={schema}\r\n+          formData={selectedComponent}\r\n+          onChange={e => onChange(e.formData)}\r\n+          uiSchema={{\r\n+            color: { \"ui:widget\": \"color\" },\r\n+            fontSize: { \"ui:widget\": \"updown\" }\r\n+          }}\r\n+        />\r\n+      </div>\r\n     </div>\r\n-  </div>\r\n-);\r\n+  );\r\n+};\r\n \r\n export default PropertyPanel;\r\n"
                },
                {
                    "date": 1747091172343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import type { CanvasComponent } from \"../../types/index\";\r\n import { Form } from \"@rjsf/antd\";\r\n import React from \"react\";\r\n import { textComponentSchema } from \"../../schemas/textComponentSchema\";\r\n+import { validator } from \"@rjsf/validator-ajv8\";\r\n \r\n interface PropertyPanelProps {\r\n   selectedComponent: CanvasComponent | undefined;\r\n-  onChange: (formData: any) => void;\r\n+  onChange: (formData: Partial<CanvasComponent>) => void;\r\n }\r\n \r\n const PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n   selectedComponent,\r\n@@ -35,9 +36,10 @@\n       <div style={{ padding: 20 }}>\r\n         <Form\r\n           schema={schema}\r\n           formData={selectedComponent}\r\n-          onChange={(e) => onChange(e.formData)}\r\n+          onChange={(e) => onChange(e.formData as Partial<CanvasComponent>)}\r\n+          validator={validator}\r\n           uiSchema={{\r\n             color: { \"ui:widget\": \"color\" },\r\n             fontSize: { \"ui:widget\": \"updown\" },\r\n           }}\r\n"
                },
                {
                    "date": 1747091178313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { CanvasComponent } from \"../../types/index\";\r\n import { Form } from \"@rjsf/antd\";\r\n import React from \"react\";\r\n import { textComponentSchema } from \"../../schemas/textComponentSchema\";\r\n-import { validator } from \"@rjsf/validator-ajv8\";\r\n+import validator from \"@rjsf/validator-ajv8\";\r\n \r\n interface PropertyPanelProps {\r\n   selectedComponent: CanvasComponent | undefined;\r\n   onChange: (formData: Partial<CanvasComponent>) => void;\r\n"
                }
            ],
            "date": 1747064079840,
            "name": "Commit-0",
            "content": "import { Divider, Typography } from \"antd\";\r\n\r\nimport type { CanvasComponent } from \"./index\";\r\nimport React from \"react\";\r\n\r\nconst { Title } = Typography;\r\n\r\ninterface PropertyPanelProps {\r\n  selectedComponent: CanvasComponent | undefined;\r\n  onChange: (key: string, value: string) => void;\r\n}\r\n\r\nconst PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n  selectedComponent,\r\n  onChange,\r\n}) => (\r\n  <div\r\n    style={{\r\n      width: 320,\r\n      background: \"#fafafa\",\r\n      borderLeft: \"1px solid #f0f0f0\",\r\n      padding: 0,\r\n    }}\r\n  >\r\n    <div style={{ padding: 20 }}>\r\n      <Title level={5} style={{ marginTop: 0 }}>\r\n        属性面板\r\n      </Title>\r\n      <Divider style={{ margin: \"8px 0\" }} />\r\n      {selectedComponent ? (\r\n        <form style={{ display: \"flex\", flexDirection: \"column\", gap: 16 }}>\r\n          <label style={{ color: \"#666\", fontSize: 14 }}>组件名称：</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedComponent.name}\r\n            onChange={(e) => onChange(\"name\", e.target.value)}\r\n            style={{\r\n              padding: \"6px 10px\",\r\n              borderRadius: 4,\r\n              border: \"1px solid #d9d9d9\",\r\n              fontSize: 15,\r\n            }}\r\n          />\r\n        </form>\r\n      ) : (\r\n        <div style={{ color: \"#aaa\" }}>请选择画布中的组件进行属性编辑</div>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PropertyPanel;\r\n"
        }
    ]
}