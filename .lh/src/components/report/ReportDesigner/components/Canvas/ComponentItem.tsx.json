{
    "sourceFile": "src/components/report/ReportDesigner/components/Canvas/ComponentItem.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747218782317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747218789810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n-import { useDraggable, useSortable } from \"@dnd-kit/core\";\r\n-\r\n import React from \"react\";\r\n+import { useDraggable } from \"@dnd-kit/core\";\r\n \r\n interface ComponentItemProps {\r\n   component: any;\r\n   selected: boolean;\r\n"
                },
                {
                    "date": 1747218930693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,15 @@\n   selected: boolean;\r\n   onSelect: () => void;\r\n }\r\n \r\n-const ComponentItem: React.FC<ComponentItemProps> = ({ component, selected, onSelect }) => {\r\n-  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({ id: component.id });\r\n+const ComponentItem: React.FC<ComponentItemProps> = ({\r\n+  component,\r\n+  selected,\r\n+  onSelect,\r\n+}) => {\r\n+  const { attributes, listeners, setNodeRef, transform, isDragging } =\r\n+    useDraggable({ id: component.id });\r\n   // 如需排序可用 useSortable({ id: component.id }) 替换\r\n   const style: React.CSSProperties = {\r\n     position: \"absolute\",\r\n     left: component.x,\r\n@@ -23,30 +28,47 @@\n     cursor: isDragging ? \"grabbing\" : \"grab\",\r\n     zIndex: isDragging ? 1000 : 1,\r\n     userSelect: \"none\",\r\n     transition: \"box-shadow 0.2s, border 0.2s\",\r\n-    transform: transform ? `translate3d(${transform.x}px,${transform.y}px,0)` : undefined,\r\n+    transform: transform\r\n+      ? `translate3d(${transform.x}px,${transform.y}px,0)`\r\n+      : undefined,\r\n   };\r\n   return (\r\n     <div\r\n       ref={setNodeRef}\r\n       {...attributes}\r\n       {...listeners}\r\n       style={style}\r\n-      onClick={e => { e.stopPropagation(); onSelect(); }}\r\n+      onClick={(e) => {\r\n+        e.stopPropagation();\r\n+        onSelect();\r\n+      }}\r\n     >\r\n       {/* 组件内容渲染，可根据 type 拓展 */}\r\n       {component.type === \"label\" && (\r\n-        <span style={{ fontWeight: \"bold\", color: component.props?.color || \"#333\" }}>{component.props?.text || \"标签\"}</span>\r\n+        <span\r\n+          style={{\r\n+            fontWeight: \"bold\",\r\n+            color: component.props?.color || \"#333\",\r\n+          }}\r\n+        >\r\n\\ No newline at end of file\n+          {component.props?.text || \"标签\"}\r\n+        </span>\r\n       )}\r\n       {component.type === \"button\" && (\r\n-        <button style={{ width: \"100%\", height: \"100%\" }}>{component.props?.text || \"按钮\"}</button>\r\n+        <button style={{ width: \"100%\", height: \"100%\" }}>\r\n+          {component.props?.text || \"按钮\"}\r\n+        </button>\r\n       )}\r\n       {component.type === \"input\" && (\r\n-        <input style={{ width: \"100%\", height: \"100%\" }} placeholder={component.props?.placeholder || \"输入框\"} />\r\n+        <input\r\n+          style={{ width: \"100%\", height: \"100%\" }}\r\n+          placeholder={component.props?.placeholder || \"输入框\"}\r\n+        />\r\n       )}\r\n       {/* 其它类型... */}\r\n     </div>\r\n   );\r\n };\r\n \r\n-export default ComponentItem;\n+export default ComponentItem;\r\n"
                },
                {
                    "date": 1747227955507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,5 @@\n- \n\\ No newline at end of file\n+// 单个组件的拖拽/渲染\r\n+\r\n+export default function ComponentItem() {\r\n+  return null;\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1747218782317,
            "name": "Commit-0",
            "content": "import { useDraggable, useSortable } from \"@dnd-kit/core\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface ComponentItemProps {\r\n  component: any;\r\n  selected: boolean;\r\n  onSelect: () => void;\r\n}\r\n\r\nconst ComponentItem: React.FC<ComponentItemProps> = ({ component, selected, onSelect }) => {\r\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({ id: component.id });\r\n  // 如需排序可用 useSortable({ id: component.id }) 替换\r\n  const style: React.CSSProperties = {\r\n    position: \"absolute\",\r\n    left: component.x,\r\n    top: component.y,\r\n    width: component.width,\r\n    height: component.height,\r\n    border: selected ? \"2px solid #1890ff\" : \"1px solid #e5e5e5\",\r\n    background: isDragging ? \"#e6f7ff\" : \"#fff\",\r\n    borderRadius: 6,\r\n    boxShadow: selected ? \"0 0 0 2px #91d5ff\" : undefined,\r\n    cursor: isDragging ? \"grabbing\" : \"grab\",\r\n    zIndex: isDragging ? 1000 : 1,\r\n    userSelect: \"none\",\r\n    transition: \"box-shadow 0.2s, border 0.2s\",\r\n    transform: transform ? `translate3d(${transform.x}px,${transform.y}px,0)` : undefined,\r\n  };\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      {...attributes}\r\n      {...listeners}\r\n      style={style}\r\n      onClick={e => { e.stopPropagation(); onSelect(); }}\r\n    >\r\n      {/* 组件内容渲染，可根据 type 拓展 */}\r\n      {component.type === \"label\" && (\r\n        <span style={{ fontWeight: \"bold\", color: component.props?.color || \"#333\" }}>{component.props?.text || \"标签\"}</span>\r\n      )}\r\n      {component.type === \"button\" && (\r\n        <button style={{ width: \"100%\", height: \"100%\" }}>{component.props?.text || \"按钮\"}</button>\r\n      )}\r\n      {component.type === \"input\" && (\r\n        <input style={{ width: \"100%\", height: \"100%\" }} placeholder={component.props?.placeholder || \"输入框\"} />\r\n      )}\r\n      {/* 其它类型... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComponentItem;"
        }
    ]
}