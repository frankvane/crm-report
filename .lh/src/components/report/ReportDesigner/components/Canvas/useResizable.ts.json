{
    "sourceFile": "src/components/report/ReportDesigner/components/Canvas/useResizable.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747099069565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747099236569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,15 +44,15 @@\n       left: x,\r\n       top: y,\r\n       anchor,\r\n     };\r\n-    window.addEventListener(\"mousemove\", handleMouseMove as any);\r\n-    window.addEventListener(\"mouseup\", handleMouseUp as any);\r\n+    window.addEventListener(\"mousemove\", handleMouseMove);\r\n+    window.addEventListener(\"mouseup\", handleMouseUp);\r\n   }\r\n \r\n   function handleMouseMove(e: MouseEvent) {\r\n-    let deltaX = e.clientX - start.current.x;\r\n-    let deltaY = e.clientY - start.current.y;\r\n+    const deltaX = e.clientX - start.current.x;\r\n+    const deltaY = e.clientY - start.current.y;\r\n     let newWidth = start.current.width;\r\n     let newHeight = start.current.height;\r\n     let newX = start.current.left;\r\n     let newY = start.current.top;\r\n@@ -73,10 +73,10 @@\n     onResize({ width: newWidth, height: newHeight, x: newX, y: newY });\r\n   }\r\n \r\n   function handleMouseUp() {\r\n-    window.removeEventListener(\"mousemove\", handleMouseMove as any);\r\n-    window.removeEventListener(\"mouseup\", handleMouseUp as any);\r\n+    window.removeEventListener(\"mousemove\", handleMouseMove);\r\n+    window.removeEventListener(\"mouseup\", handleMouseUp);\r\n   }\r\n \r\n   return { handleMouseDown };\r\n }\r\n"
                },
                {
                    "date": 1747099440370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import type { CanvasComponent } from \"../../types\";\r\n+import { getSnapAndGuides } from \"../../utils\";\r\n import { useRef } from \"react\";\r\n \r\n export interface UseResizableProps {\r\n   width: number;\r\n@@ -12,8 +14,14 @@\n     height: number;\r\n     x: number;\r\n     y: number;\r\n   }) => void;\r\n+  allComponents?: CanvasComponent[];\r\n+  selfId?: string;\r\n+  canvasWidth?: number;\r\n+  canvasHeight?: number;\r\n+  snapThreshold?: number;\r\n+  onGuideChange?: (guide: { x?: number; y?: number; xHighlight?: boolean; yHighlight?: boolean } | null) => void;\r\n }\r\n \r\n export function useResizable({\r\n   width,\r\n@@ -22,8 +30,14 @@\n   y,\r\n   minWidth = 20,\r\n   minHeight = 20,\r\n   onResize,\r\n+  allComponents,\r\n+  selfId,\r\n+  canvasWidth,\r\n+  canvasHeight,\r\n+  snapThreshold = 8,\r\n+  onGuideChange,\r\n }: UseResizableProps) {\r\n   const start = useRef({\r\n     x: 0,\r\n     y: 0,\r\n@@ -68,15 +82,43 @@\n     if (anchor.includes(\"n\")) {\r\n       newHeight = Math.max(start.current.height - deltaY, minHeight);\r\n       newY = start.current.top + deltaY;\r\n     }\r\n-    // TODO: 吸附逻辑可在此插入\r\n+    // 吸附逻辑\r\n+    let snapResult = null;\r\n+    if (\r\n+      allComponents &&\r\n+      typeof selfId === \"string\" &&\r\n+      typeof canvasWidth === \"number\" &&\r\n+      typeof canvasHeight === \"number\"\r\n+    ) {\r\n+      snapResult = getSnapAndGuides(\r\n+        newX,\r\n+        newY,\r\n+        selfId,\r\n+        allComponents,\r\n+        canvasWidth,\r\n+        canvasHeight,\r\n+        snapThreshold,\r\n+        newWidth,\r\n+        newHeight,\r\n+        0 // RULER_SIZE\r\n+      );\r\n+      if (snapResult) {\r\n+        if (snapResult.snapX !== undefined) newX = snapResult.snapX;\r\n+        if (snapResult.snapY !== undefined) newY = snapResult.snapY;\r\n+        if (onGuideChange) onGuideChange(snapResult.guide);\r\n+      }\r\n+    } else {\r\n+      if (onGuideChange) onGuideChange(null);\r\n+    }\r\n     onResize({ width: newWidth, height: newHeight, x: newX, y: newY });\r\n   }\r\n \r\n   function handleMouseUp() {\r\n     window.removeEventListener(\"mousemove\", handleMouseMove);\r\n     window.removeEventListener(\"mouseup\", handleMouseUp);\r\n+    if (onGuideChange) onGuideChange(null);\r\n   }\r\n \r\n   return { handleMouseDown };\r\n }\r\n"
                }
            ],
            "date": 1747099069565,
            "name": "Commit-0",
            "content": "import { useRef } from \"react\";\r\n\r\nexport interface UseResizableProps {\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  onResize: (rect: { width: number; height: number; x: number; y: number }) => void;\r\n}\r\n\r\nexport function useResizable({ width, height, x, y, minWidth = 20, minHeight = 20, onResize }: UseResizableProps) {\r\n  const start = useRef({ x: 0, y: 0, width: 0, height: 0, left: 0, top: 0, anchor: \"\" });\r\n\r\n  function handleMouseDown(e: React.MouseEvent, anchor: string) {\r\n    e.stopPropagation();\r\n    start.current = {\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      width,\r\n      height,\r\n      left: x,\r\n      top: y,\r\n      anchor,\r\n    };\r\n    window.addEventListener(\"mousemove\", handleMouseMove as any);\r\n    window.addEventListener(\"mouseup\", handleMouseUp as any);\r\n  }\r\n\r\n  function handleMouseMove(e: MouseEvent) {\r\n    let deltaX = e.clientX - start.current.x;\r\n    let deltaY = e.clientY - start.current.y;\r\n    let newWidth = start.current.width;\r\n    let newHeight = start.current.height;\r\n    let newX = start.current.left;\r\n    let newY = start.current.top;\r\n    const anchor = start.current.anchor;\r\n    if (anchor.includes(\"e\")) newWidth = Math.max(start.current.width + deltaX, minWidth);\r\n    if (anchor.includes(\"s\")) newHeight = Math.max(start.current.height + deltaY, minHeight);\r\n    if (anchor.includes(\"w\")) {\r\n      newWidth = Math.max(start.current.width - deltaX, minWidth);\r\n      newX = start.current.left + deltaX;\r\n    }\r\n    if (anchor.includes(\"n\")) {\r\n      newHeight = Math.max(start.current.height - deltaY, minHeight);\r\n      newY = start.current.top + deltaY;\r\n    }\r\n    // TODO: 吸附逻辑可在此插入\r\n    onResize({ width: newWidth, height: newHeight, x: newX, y: newY });\r\n  }\r\n\r\n  function handleMouseUp() {\r\n    window.removeEventListener(\"mousemove\", handleMouseMove as any);\r\n    window.removeEventListener(\"mouseup\", handleMouseUp as any);\r\n  }\r\n\r\n  return { handleMouseDown };\r\n}"
        }
    ]
}