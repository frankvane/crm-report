{
    "sourceFile": "src/components/report/ReportDesigner/components/Canvas/ResizableWrapper.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747099086317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747099459424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import type { CanvasComponent } from \"../../types\";\r\n import React from \"react\";\r\n import { useResizable } from \"./useResizable\";\r\n \r\n const anchors = [\"nw\", \"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\"];\r\n@@ -40,8 +41,14 @@\n     y: number;\r\n   }) => void;\r\n   selected: boolean;\r\n   children: React.ReactNode;\r\n+  allComponents?: CanvasComponent[];\r\n+  selfId?: string;\r\n+  canvasWidth?: number;\r\n+  canvasHeight?: number;\r\n+  snapThreshold?: number;\r\n+  onGuideChange?: (guide: { x?: number; y?: number; xHighlight?: boolean; yHighlight?: boolean } | null) => void;\r\n }\r\n \r\n export const ResizableWrapper: React.FC<ResizableWrapperProps> = ({\r\n   width,\r\n@@ -50,10 +57,28 @@\n   y,\r\n   onResize,\r\n   selected,\r\n   children,\r\n+  allComponents,\r\n+  selfId,\r\n+  canvasWidth,\r\n+  canvasHeight,\r\n+  snapThreshold,\r\n+  onGuideChange,\r\n }) => {\r\n-  const { handleMouseDown } = useResizable({ width, height, x, y, onResize });\r\n+  const { handleMouseDown } = useResizable({\r\n+    width,\r\n+    height,\r\n+    x,\r\n+    y,\r\n+    onResize,\r\n+    allComponents,\r\n+    selfId,\r\n+    canvasWidth,\r\n+    canvasHeight,\r\n+    snapThreshold,\r\n+    onGuideChange,\r\n+  });\r\n   return (\r\n     <div\r\n       style={{\r\n         position: \"absolute\",\r\n"
                },
                {
                    "date": 1747100773315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n       xHighlight?: boolean;\r\n       yHighlight?: boolean;\r\n     } | null\r\n   ) => void;\r\n+  handleDragStart?: (e: React.MouseEvent) => void;\r\n }\r\n \r\n export const ResizableWrapper: React.FC<ResizableWrapperProps> = ({\r\n   width,\r\n@@ -70,8 +71,9 @@\n   canvasWidth,\r\n   canvasHeight,\r\n   snapThreshold,\r\n   onGuideChange,\r\n+  handleDragStart,\r\n }) => {\r\n   const { handleMouseDown } = useResizable({\r\n     width,\r\n     height,\r\n@@ -94,14 +96,19 @@\n         width,\r\n         height,\r\n         boxSizing: \"border-box\",\r\n       }}\r\n+      onMouseDown={(e) => {\r\n+        if ((e.target as HTMLElement).classList.contains('resize-anchor')) return;\r\n+        handleDragStart?.(e);\r\n+      }}\r\n     >\r\n       {children}\r\n       {selected &&\r\n         anchors.map((anchor) => (\r\n           <div\r\n             key={anchor}\r\n+            className=\"resize-anchor\"\r\n             style={getAnchorStyle(anchor, width, height)}\r\n             onMouseDown={(e) => handleMouseDown(e, anchor)}\r\n           />\r\n         ))}\r\n"
                }
            ],
            "date": 1747099086317,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { useResizable } from \"./useResizable\";\r\n\r\nconst anchors = [\"nw\", \"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\"];\r\n\r\nfunction getAnchorStyle(anchor: string, width: number, height: number) {\r\n  const size = 8;\r\n  const half = size / 2;\r\n  const pos: Record<string, React.CSSProperties> = {\r\n    nw: { left: -half, top: -half, cursor: \"nwse-resize\" },\r\n    n: { left: width / 2 - half, top: -half, cursor: \"ns-resize\" },\r\n    ne: { left: width - half, top: -half, cursor: \"nesw-resize\" },\r\n    e: { left: width - half, top: height / 2 - half, cursor: \"ew-resize\" },\r\n    se: { left: width - half, top: height - half, cursor: \"nwse-resize\" },\r\n    s: { left: width / 2 - half, top: height - half, cursor: \"ns-resize\" },\r\n    sw: { left: -half, top: height - half, cursor: \"nesw-resize\" },\r\n    w: { left: -half, top: height / 2 - half, cursor: \"ew-resize\" },\r\n  };\r\n  return {\r\n    position: \"absolute\" as const,\r\n    width: size,\r\n    height: size,\r\n    background: \"#1890ff\",\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid #fff\",\r\n    zIndex: 10,\r\n    ...pos[anchor],\r\n  };\r\n}\r\n\r\ninterface ResizableWrapperProps {\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n  onResize: (rect: { width: number; height: number; x: number; y: number }) => void;\r\n  selected: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ResizableWrapper: React.FC<ResizableWrapperProps> = ({\r\n  width,\r\n  height,\r\n  x,\r\n  y,\r\n  onResize,\r\n  selected,\r\n  children,\r\n}) => {\r\n  const { handleMouseDown } = useResizable({ width, height, x, y, onResize });\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: x,\r\n        top: y,\r\n        width,\r\n        height,\r\n        boxSizing: \"border-box\",\r\n      }}\r\n    >\r\n      {children}\r\n      {selected &&\r\n        anchors.map((anchor) => (\r\n          <div\r\n            key={anchor}\r\n            style={getAnchorStyle(anchor, width, height)}\r\n            onMouseDown={(e) => handleMouseDown(e, anchor)}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};"
        }
    ]
}