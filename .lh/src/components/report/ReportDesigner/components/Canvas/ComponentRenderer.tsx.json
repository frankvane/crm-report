{
    "sourceFile": "src/components/report/ReportDesigner/components/Canvas/ComponentRenderer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1747064204741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747089946474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,20 @@\n               }\r\n             }}\r\n             onContextMenu={(e) => handleContextMenu(e, comp.id)}\r\n           >\r\n-            <Comp />\r\n+            {comp.type === \"text\" ? (\r\n+              <TextComponent\r\n+                text={comp.text || \"\"}\r\n+                fontSize={comp.fontSize}\r\n+                color={comp.color}\r\n+                fontWeight={comp.fontWeight}\r\n+                textAlign={comp.textAlign}\r\n+                dataBinding={comp.dataBinding}\r\n+              />\r\n+            ) : (\r\n+              <Comp />\r\n+            )}\r\n           </div>\r\n         );\r\n       })}\r\n     </>\r\n"
                },
                {
                    "date": 1747089961137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   COMPONENT_WIDTH: number;\r\n   COMPONENT_HEIGHT: number;\r\n }\r\n \r\n-const componentMap: Record<string, React.FC> = {\r\n+const componentMap: Record<string, React.FC<any>> = {\r\n   text: TextComponent,\r\n   table: TableComponent,\r\n   chart: ChartComponent,\r\n };\r\n"
                },
                {
                    "date": 1747091392787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,15 @@\n                 color={comp.color}\r\n                 fontWeight={comp.fontWeight}\r\n                 textAlign={comp.textAlign}\r\n                 dataBinding={comp.dataBinding}\r\n+                mockData={(() => {\r\n+                  try {\r\n+                    return comp.mockData ? JSON.parse(comp.mockData) : undefined;\r\n+                  } catch {\r\n+                    return undefined;\r\n+                  }\r\n+                })()}\r\n               />\r\n             ) : (\r\n               <Comp />\r\n             )}\r\n"
                },
                {
                    "date": 1747091918871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,11 @@\n                 textAlign={comp.textAlign}\r\n                 dataBinding={comp.dataBinding}\r\n                 mockData={(() => {\r\n                   try {\r\n-                    return comp.mockData ? JSON.parse(comp.mockData) : undefined;\r\n+                    return comp.mockData\r\n+                      ? JSON.parse(comp.mockData)\r\n+                      : undefined;\r\n                   } catch {\r\n                     return undefined;\r\n                   }\r\n                 })()}\r\n"
                }
            ],
            "date": 1747064204741,
            "name": "Commit-0",
            "content": "import type { CanvasComponent } from \"../../types\";\r\nimport ChartComponent from \"../../../components/ChartComponent\";\r\nimport React from \"react\";\r\nimport TableComponent from \"../../../components/TableComponent\";\r\nimport TextComponent from \"../../../components/TextComponent\";\r\n\r\ninterface ComponentRendererProps {\r\n  components: CanvasComponent[];\r\n  selectedIds: string[];\r\n  setSelectedIds: React.Dispatch<React.SetStateAction<string[]>>;\r\n  compRefs: React.MutableRefObject<Record<string, HTMLDivElement | null>>;\r\n  handleMouseDown: (\r\n    id: string,\r\n    e: React.MouseEvent,\r\n    el?: HTMLDivElement\r\n  ) => void;\r\n  handleContextMenu: (e: React.MouseEvent, compId: string) => void;\r\n  COMPONENT_WIDTH: number;\r\n  COMPONENT_HEIGHT: number;\r\n}\r\n\r\nconst componentMap: Record<string, React.FC> = {\r\n  text: TextComponent,\r\n  table: TableComponent,\r\n  chart: ChartComponent,\r\n};\r\n\r\nexport const ComponentRenderer: React.FC<ComponentRendererProps> = ({\r\n  components,\r\n  selectedIds,\r\n  setSelectedIds,\r\n  compRefs,\r\n  handleMouseDown,\r\n  handleContextMenu,\r\n  COMPONENT_WIDTH,\r\n  COMPONENT_HEIGHT,\r\n}) => {\r\n  return (\r\n    <>\r\n      {components.map((comp, idx) => {\r\n        if (comp.visible === false) return null;\r\n        const Comp =\r\n          componentMap[comp.type] ||\r\n          (() => <div style={{ color: \"red\" }}>未知组件类型: {comp.type}</div>);\r\n        return (\r\n          <div\r\n            ref={(el) => {\r\n              compRefs.current[comp.id] = el;\r\n            }}\r\n            key={comp.id}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: comp.x,\r\n              top: comp.y,\r\n              width: COMPONENT_WIDTH,\r\n              height: COMPONENT_HEIGHT,\r\n              border: selectedIds.includes(comp.id)\r\n                ? \"2px solid #1890ff\"\r\n                : \"1px solid #e5e5e5\",\r\n              borderRadius: 6,\r\n              background: \"#fafafa\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: 8,\r\n              fontSize: 16,\r\n              color: \"#333\",\r\n              cursor: comp.locked ? \"not-allowed\" : \"move\",\r\n              zIndex: 100 + idx,\r\n              opacity: comp.locked ? 0.5 : 1,\r\n              pointerEvents: \"auto\",\r\n            }}\r\n            onMouseDown={\r\n              comp.locked\r\n                ? undefined\r\n                : (e) =>\r\n                    compRefs.current[comp.id] !== null &&\r\n                    compRefs.current[comp.id] !== undefined\r\n                      ? handleMouseDown(\r\n                          comp.id,\r\n                          e,\r\n                          compRefs.current[comp.id] as HTMLDivElement\r\n                        )\r\n                      : handleMouseDown(comp.id, e)\r\n            }\r\n            onClick={(e) => {\r\n              if (e.shiftKey || e.ctrlKey) {\r\n                // shift/ctrl 多选/反选\r\n                if (selectedIds.includes(comp.id)) {\r\n                  setSelectedIds(selectedIds.filter((id) => id !== comp.id));\r\n                } else {\r\n                  setSelectedIds([...selectedIds, comp.id]);\r\n                }\r\n              } else {\r\n                setSelectedIds([comp.id]);\r\n              }\r\n            }}\r\n            onContextMenu={(e) => handleContextMenu(e, comp.id)}\r\n          >\r\n            <Comp />\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n"
        }
    ]
}