{
    "sourceFile": "src/components/report/ReportDesigner/components/Canvas/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1747042790130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747042800253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { CanvasComponent } from \"../../../types\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n-import { useCanvasDrag } from \"../../../hooks/useCanvasDrag\";\r\n+import { useCanvasDrag } from \"../../../hooks\";\r\n \r\n interface CanvasProps {\r\n   components: CanvasComponent[];\r\n   onDrop: (type: string, x: number, y: number) => void;\r\n"
                },
                {
                    "date": 1747042836240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import type { CanvasComponent } from \"../../../types\";\r\n+import type { CanvasComponent } from \"../../../types/index\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n import { useCanvasDrag } from \"../../../hooks\";\r\n"
                },
                {
                    "date": 1747042843668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import type { CanvasComponent } from \"../../../types/index\";\r\n+import type { CanvasComponent } from \"../../../types\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n import { useCanvasDrag } from \"../../../hooks\";\r\n"
                },
                {
                    "date": 1747043136519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-import type { CanvasComponent } from \"../../../types\";\r\n+import type { CanvasComponent } from \"../../../types/index\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n-import { useCanvasDrag } from \"../../../hooks\";\r\n+import { useCanvasDrag } from \"../../../hooks/index\";\r\n \r\n interface CanvasProps {\r\n   components: CanvasComponent[];\r\n   onDrop: (type: string, x: number, y: number) => void;\r\n"
                },
                {
                    "date": 1747043228355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { CanvasComponent } from \"../../../types/index\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n-import { useCanvasDrag } from \"../../../hooks/index\";\r\n+import { useCanvasDrag } from \"../../hooks\";\r\n \r\n interface CanvasProps {\r\n   components: CanvasComponent[];\r\n   onDrop: (type: string, x: number, y: number) => void;\r\n"
                },
                {
                    "date": 1747043240170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import type { CanvasComponent } from \"../../../types/index\";\r\n+import type { CanvasComponent } from \"../../types\";\r\n import GridLines from \"./GridLines\";\r\n import React from \"react\";\r\n import Ruler from \"./Ruler\";\r\n import { useCanvasDrag } from \"../../hooks\";\r\n"
                },
                {
                    "date": 1747050048431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n                 color: \"#333\",\r\n                 cursor: \"move\",\r\n                 zIndex: comp.id === selectedId ? 10 : 1,\r\n               }}\r\n-              onMouseDown={(e) => handleMouseDown(comp.id, e)}\r\n+              onMouseDown={() => handleMouseDown(comp.id)}\r\n               onClick={() => setSelectedId(comp.id)}\r\n             >\r\n               <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n               {comp.name}\r\n"
                },
                {
                    "date": 1747050057191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                 left: guideLines.x,\r\n                 top: 0,\r\n                 width: 1,\r\n                 height: \"100%\",\r\n-                borderLeft: \"2px solid #1890ff\",\r\n+                borderLeft: \"2px solid #0050b3\",\r\n                 zIndex: 9999,\r\n                 pointerEvents: \"none\",\r\n               }}\r\n             />\r\n@@ -149,9 +149,9 @@\n                 top: guideLines.y,\r\n                 left: 0,\r\n                 height: 1,\r\n                 width: \"100%\",\r\n-                borderTop: \"2px solid #1890ff\",\r\n+                borderTop: \"2px solid #0050b3\",\r\n                 zIndex: 9999,\r\n                 pointerEvents: \"none\",\r\n               }}\r\n             />\r\n"
                },
                {
                    "date": 1747050316232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                 left: guideLines.x,\r\n                 top: 0,\r\n                 width: 1,\r\n                 height: \"100%\",\r\n-                borderLeft: \"2px solid #0050b3\",\r\n+                borderLeft: \"2px solid #001529\",\r\n                 zIndex: 9999,\r\n                 pointerEvents: \"none\",\r\n               }}\r\n             />\r\n@@ -149,9 +149,9 @@\n                 top: guideLines.y,\r\n                 left: 0,\r\n                 height: 1,\r\n                 width: \"100%\",\r\n-                borderTop: \"2px solid #0050b3\",\r\n+                borderTop: \"2px solid #001529\",\r\n                 zIndex: 9999,\r\n                 pointerEvents: \"none\",\r\n               }}\r\n             />\r\n"
                },
                {
                    "date": 1747050529060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n                 color: \"#333\",\r\n                 cursor: \"move\",\r\n                 zIndex: comp.id === selectedId ? 10 : 1,\r\n               }}\r\n-              onMouseDown={() => handleMouseDown(comp.id)}\r\n+              onMouseDown={(e) => handleMouseDown(comp.id, e)}\r\n               onClick={() => setSelectedId(comp.id)}\r\n             >\r\n               <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n               {comp.name}\r\n"
                },
                {
                    "date": 1747051072044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,38 +155,42 @@\n                 pointerEvents: \"none\",\r\n               }}\r\n             />\r\n           )}\r\n-          {components.map((comp) => (\r\n-            <div\r\n-              key={comp.id}\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                left: comp.x,\r\n-                top: comp.y,\r\n-                width: COMPONENT_WIDTH,\r\n-                height: COMPONENT_HEIGHT,\r\n-                border:\r\n-                  comp.id === selectedId\r\n-                    ? \"2px solid #1890ff\"\r\n-                    : \"1px solid #e5e5e5\",\r\n-                borderRadius: 6,\r\n-                background: \"#fafafa\",\r\n-                display: \"flex\",\r\n-                alignItems: \"center\",\r\n-                gap: 8,\r\n-                fontSize: 16,\r\n-                color: \"#333\",\r\n-                cursor: \"move\",\r\n-                zIndex: comp.id === selectedId ? 10 : 1,\r\n-              }}\r\n-              onMouseDown={(e) => handleMouseDown(comp.id, e)}\r\n-              onClick={() => setSelectedId(comp.id)}\r\n-            >\r\n-              <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n-              {comp.name}\r\n-            </div>\r\n-          ))}\r\n+          {components.map((comp) => {\r\n+            const compRef = React.createRef<HTMLDivElement>();\r\n+            return (\r\n+              <div\r\n+                ref={compRef}\r\n+                key={comp.id}\r\n+                style={{\r\n+                  position: \"absolute\",\r\n+                  left: comp.x,\r\n+                  top: comp.y,\r\n+                  width: COMPONENT_WIDTH,\r\n+                  height: COMPONENT_HEIGHT,\r\n+                  border:\r\n+                    comp.id === selectedId\r\n+                      ? \"2px solid #1890ff\"\r\n+                      : \"1px solid #e5e5e5\",\r\n+                  borderRadius: 6,\r\n+                  background: \"#fafafa\",\r\n+                  display: \"flex\",\r\n+                  alignItems: \"center\",\r\n+                  gap: 8,\r\n+                  fontSize: 16,\r\n+                  color: \"#333\",\r\n+                  cursor: \"move\",\r\n+                  zIndex: comp.id === selectedId ? 10 : 1,\r\n+                }}\r\n+                onMouseDown={(e) => handleMouseDown(comp.id, e, compRef)}\r\n+                onClick={() => setSelectedId(comp.id)}\r\n+              >\r\n+                <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n+                {comp.name}\r\n+              </div>\r\n+            );\r\n+          })}\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747051697085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,9 @@\n             />\r\n           )}\r\n           {components.map((comp) => {\r\n             const compRef = React.createRef<HTMLDivElement>();\r\n+            console.log('[render] comp', comp.id, 'x:', comp.x, 'y:', comp.y, 'selected:', comp.id === selectedId);\r\n             return (\r\n               <div\r\n                 ref={compRef}\r\n                 key={comp.id}\r\n"
                },
                {
                    "date": 1747052022072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,11 @@\n     SNAP_THRESHOLD,\r\n     RULER_SIZE,\r\n   });\r\n \r\n+  // 组件 refs 映射\r\n+  const compRefs = React.useRef<Record<string, HTMLDivElement | null>>({});\r\n+\r\n   return (\r\n     <div\r\n       ref={canvasRef}\r\n       style={{\r\n@@ -156,22 +159,12 @@\n               }}\r\n             />\r\n           )}\r\n           {components.map((comp) => {\r\n-            const compRef = React.createRef<HTMLDivElement>();\r\n-            console.log(\r\n-              \"[render] comp\",\r\n-              comp.id,\r\n-              \"x:\",\r\n-              comp.x,\r\n-              \"y:\",\r\n-              comp.y,\r\n-              \"selected:\",\r\n-              comp.id === selectedId\r\n-            );\r\n+            // 绑定 ref 到 compRefs\r\n             return (\r\n               <div\r\n-                ref={compRef}\r\n+                ref={el => { compRefs.current[comp.id] = el; }}\r\n                 key={comp.id}\r\n                 style={{\r\n                   position: \"absolute\",\r\n                   left: comp.x,\r\n@@ -191,9 +184,9 @@\n                   color: \"#333\",\r\n                   cursor: \"move\",\r\n                   zIndex: comp.id === selectedId ? 10 : 1,\r\n                 }}\r\n-                onMouseDown={(e) => handleMouseDown(comp.id, e, compRef)}\r\n+                onMouseDown={e => handleMouseDown(comp.id, e, compRefs.current[comp.id])}\r\n                 onClick={() => setSelectedId(comp.id)}\r\n               >\r\n                 <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n                 {comp.name}\r\n"
                },
                {
                    "date": 1747052127729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n   setSelectedId,\r\n   width,\r\n   height,\r\n }) => {\r\n+  const contentRef = React.useRef<HTMLDivElement>(null);\r\n   const {\r\n     canvasRef,\r\n     guideLines,\r\n     handleDrop,\r\n@@ -45,8 +46,9 @@\n     COMPONENT_WIDTH,\r\n     COMPONENT_HEIGHT,\r\n     SNAP_THRESHOLD,\r\n     RULER_SIZE,\r\n+    contentRef,\r\n   });\r\n \r\n   // 组件 refs 映射\r\n   const compRefs = React.useRef<Record<string, HTMLDivElement | null>>({});\r\n@@ -115,8 +117,9 @@\n           />\r\n         </div>\r\n         {/* 内容区整体偏移，预留刻度尺空间 */}\r\n         <div\r\n+          ref={contentRef}\r\n           style={{\r\n             position: \"absolute\",\r\n             left: RULER_SIZE,\r\n             top: RULER_SIZE,\r\n"
                }
            ],
            "date": 1747042790130,
            "name": "Commit-0",
            "content": "import type { CanvasComponent } from \"../../../types\";\r\nimport GridLines from \"./GridLines\";\r\nimport React from \"react\";\r\nimport Ruler from \"./Ruler\";\r\nimport { useCanvasDrag } from \"../../../hooks/useCanvasDrag\";\r\n\r\ninterface CanvasProps {\r\n  components: CanvasComponent[];\r\n  onDrop: (type: string, x: number, y: number) => void;\r\n  onComponentMove: (id: string, x: number, y: number) => void;\r\n  selectedId: string | null;\r\n  setSelectedId: (id: string) => void;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst SNAP_THRESHOLD = 8; // px 吸附阈值\r\nconst COMPONENT_WIDTH = 120;\r\nconst COMPONENT_HEIGHT = 40;\r\nconst RULER_STEP = 40;\r\nconst RULER_SIZE = 24;\r\n\r\nconst Canvas: React.FC<CanvasProps> = ({\r\n  components,\r\n  onDrop,\r\n  onComponentMove,\r\n  selectedId,\r\n  setSelectedId,\r\n  width,\r\n  height,\r\n}) => {\r\n  const {\r\n    canvasRef,\r\n    guideLines,\r\n    handleDrop,\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n  } = useCanvasDrag({\r\n    components,\r\n    width,\r\n    height,\r\n    onDrop,\r\n    onComponentMove,\r\n    COMPONENT_WIDTH,\r\n    COMPONENT_HEIGHT,\r\n    SNAP_THRESHOLD,\r\n    RULER_SIZE,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={canvasRef}\r\n      style={{\r\n        flex: 1,\r\n        padding: \"32px 0\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"flex-start\",\r\n        minWidth: 0,\r\n        minHeight: 0,\r\n        overflow: \"auto\",\r\n        background: \"#f5f6fa\",\r\n      }}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onDrop={handleDrop}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          width: width,\r\n          height: height,\r\n          background: \"#fff\",\r\n          border: \"2px solid #bfbfbf\",\r\n          borderRadius: 12,\r\n        }}\r\n      >\r\n        {/* 顶部刻度尺 */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: RULER_SIZE,\r\n            top: 0,\r\n            width: width - RULER_SIZE,\r\n            height: RULER_SIZE,\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <Ruler\r\n            length={width - RULER_SIZE}\r\n            step={RULER_STEP}\r\n            direction=\"horizontal\"\r\n          />\r\n        </div>\r\n        {/* 左侧刻度尺 */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: RULER_SIZE,\r\n            width: RULER_SIZE,\r\n            height: height - RULER_SIZE,\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <Ruler\r\n            length={height - RULER_SIZE}\r\n            step={RULER_STEP}\r\n            direction=\"vertical\"\r\n          />\r\n        </div>\r\n        {/* 内容区整体偏移，预留刻度尺空间 */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: RULER_SIZE,\r\n            top: RULER_SIZE,\r\n            width: width - RULER_SIZE,\r\n            height: height - RULER_SIZE,\r\n          }}\r\n        >\r\n          {/* 网格虚线辅助线 */}\r\n          <GridLines\r\n            width={width - RULER_SIZE}\r\n            height={height - RULER_SIZE}\r\n            step={RULER_STEP}\r\n          />\r\n          {/* 辅助线渲染 */}\r\n          {guideLines?.x !== undefined && (\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                left: guideLines.x,\r\n                top: 0,\r\n                width: 1,\r\n                height: \"100%\",\r\n                borderLeft: \"2px solid #1890ff\",\r\n                zIndex: 9999,\r\n                pointerEvents: \"none\",\r\n              }}\r\n            />\r\n          )}\r\n          {guideLines?.y !== undefined && (\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: guideLines.y,\r\n                left: 0,\r\n                height: 1,\r\n                width: \"100%\",\r\n                borderTop: \"2px solid #1890ff\",\r\n                zIndex: 9999,\r\n                pointerEvents: \"none\",\r\n              }}\r\n            />\r\n          )}\r\n          {components.map((comp) => (\r\n            <div\r\n              key={comp.id}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: comp.x,\r\n                top: comp.y,\r\n                width: COMPONENT_WIDTH,\r\n                height: COMPONENT_HEIGHT,\r\n                border:\r\n                  comp.id === selectedId\r\n                    ? \"2px solid #1890ff\"\r\n                    : \"1px solid #e5e5e5\",\r\n                borderRadius: 6,\r\n                background: \"#fafafa\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: 8,\r\n                fontSize: 16,\r\n                color: \"#333\",\r\n                cursor: \"move\",\r\n                zIndex: comp.id === selectedId ? 10 : 1,\r\n              }}\r\n              onMouseDown={(e) => handleMouseDown(comp.id, e)}\r\n              onClick={() => setSelectedId(comp.id)}\r\n            >\r\n              <span style={{ marginLeft: 8 }}>{comp.icon}</span>\r\n              {comp.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"
        }
    ]
}