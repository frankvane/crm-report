{
    "sourceFile": "src/components/report/ReportDesigner/schemas/textComponentSchema.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1747090574033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747091234641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,15 +10,15 @@\n     fontWeight: {\r\n       type: \"string\",\r\n       title: \"字体粗细\",\r\n       enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\r\n-      default: \"normal\"\r\n+      default: \"normal\",\r\n     },\r\n     textAlign: {\r\n       type: \"string\",\r\n       title: \"对齐方式\",\r\n       enum: [\"left\", \"center\", \"right\"],\r\n-      default: \"left\"\r\n+      default: \"left\",\r\n     },\r\n     dataBinding: {\r\n       type: \"object\",\r\n       title: \"数据绑定\",\r\n@@ -28,11 +28,11 @@\n         format: {\r\n           type: \"string\",\r\n           title: \"格式化\",\r\n           enum: [\"none\", \"currency\", \"date\", \"percent\"],\r\n-          default: \"none\"\r\n+          default: \"none\",\r\n         },\r\n-        expression: { type: \"string\", title: \"表达式\" }\r\n-      }\r\n-    }\r\n-  }\r\n\\ No newline at end of file\n-}; \n+        expression: { type: \"string\", title: \"表达式\" },\r\n+      },\r\n+    },\r\n+  },\r\n+};\r\n"
                },
                {
                    "date": 1747091321140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,6 +33,7 @@\n         },\r\n         expression: { type: \"string\", title: \"表达式\" },\r\n       },\r\n     },\r\n+    mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\r\n   },\r\n };\r\n"
                },
                {
                    "date": 1747098331846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,6 +34,8 @@\n         expression: { type: \"string\", title: \"表达式\" },\r\n       },\r\n     },\r\n     mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\r\n+    width: { type: \"number\", title: \"宽度(px)\", minimum: 20, default: 120 },\r\n+    height: { type: \"number\", title: \"高度(px)\", minimum: 20, default: 32 },\r\n   },\r\n };\r\n"
                },
                {
                    "date": 1747100489953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,41 @@\n-import { JSONSchema7 } from \"json-schema\";\r\n-\r\n-export const textComponentSchema: JSONSchema7 = {\r\n-  type: \"object\",\r\n-  properties: {\r\n-    name: { type: \"string\", title: \"组件名称\" },\r\n-    text: { type: \"string\", title: \"文本内容\" },\r\n-    fontSize: { type: \"number\", title: \"字体大小\", default: 14 },\r\n-    color: { type: \"string\", title: \"字体颜色\", default: \"#222222\" },\r\n-    fontWeight: {\r\n-      type: \"string\",\r\n-      title: \"字体粗细\",\r\n-      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\r\n-      default: \"normal\",\r\n-    },\r\n-    textAlign: {\r\n-      type: \"string\",\r\n-      title: \"对齐方式\",\r\n-      enum: [\"left\", \"center\", \"right\"],\r\n-      default: \"left\",\r\n-    },\r\n-    dataBinding: {\r\n-      type: \"object\",\r\n-      title: \"数据绑定\",\r\n-      properties: {\r\n-        source: { type: \"string\", title: \"数据源\" },\r\n-        field: { type: \"string\", title: \"字段\" },\r\n-        format: {\r\n-          type: \"string\",\r\n-          title: \"格式化\",\r\n-          enum: [\"none\", \"currency\", \"date\", \"percent\"],\r\n-          default: \"none\",\r\n-        },\r\n-        expression: { type: \"string\", title: \"表达式\" },\r\n-      },\r\n-    },\r\n-    mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\r\n-    width: { type: \"number\", title: \"宽度(px)\", minimum: 20, default: 120 },\r\n-    height: { type: \"number\", title: \"高度(px)\", minimum: 20, default: 32 },\r\n-  },\r\n-};\r\n+import { JSONSchema7 } from \"json-schema\";\n+\n+export const textComponentSchema: JSONSchema7 = {\n+  type: \"object\",\n+  properties: {\n+    name: { type: \"string\", title: \"组件名称\" },\n+    text: { type: \"string\", title: \"文本内容\" },\n+    fontSize: { type: \"number\", title: \"字体大小\", default: 14 },\n+    color: { type: \"string\", title: \"字体颜色\", default: \"#222222\" },\n+    fontWeight: {\n+      type: \"string\",\n+      title: \"字体粗细\",\n+      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n+      default: \"normal\",\n+    },\n+    textAlign: {\n+      type: \"string\",\n+      title: \"对齐方式\",\n+      enum: [\"left\", \"center\", \"right\"],\n+      default: \"left\",\n+    },\n+    dataBinding: {\n+      type: \"object\",\n+      title: \"数据绑定\",\n+      properties: {\n+        source: { type: \"string\", title: \"数据源\" },\n+        field: { type: \"string\", title: \"字段\" },\n+        format: {\n+          type: \"string\",\n+          title: \"格式化\",\n+          enum: [\"none\", \"currency\", \"date\", \"percent\"],\n+          default: \"none\",\n+        },\n+        expression: { type: \"string\", title: \"表达式\" },\n+      },\n+    },\n+    mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n+    width: { type: \"number\", title: \"宽度(px)\", minimum: 20, default: 120 },\n+    height: { type: \"number\", title: \"高度(px)\", minimum: 20, default: 32 },\n+  },\n+};\n"
                },
                {
                    "date": 1747128608823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,61 @@\n import { JSONSchema7 } from \"json-schema\";\n \n-export const textComponentSchema: JSONSchema7 = {\n+export const textComponentSchema = {\n   type: \"object\",\n   properties: {\n-    name: { type: \"string\", title: \"组件名称\" },\n-    text: { type: \"string\", title: \"文本内容\" },\n-    fontSize: { type: \"number\", title: \"字体大小\", default: 14 },\n-    color: { type: \"string\", title: \"字体颜色\", default: \"#222222\" },\n-    fontWeight: {\n-      type: \"string\",\n-      title: \"字体粗细\",\n-      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n-      default: \"normal\",\n+    baseProps: {\n+      type: \"object\",\n+      title: \"基本属性\",\n+      properties: {\n+        name: { type: \"string\", title: \"组件名称\" },\n+        x: { type: \"number\", title: \"X\" },\n+        y: { type: \"number\", title: \"Y\" },\n+        width: { type: \"number\", title: \"宽度\" },\n+        height: { type: \"number\", title: \"高度\" },\n+        locked: { type: \"boolean\", title: \"锁定\" },\n+        visible: { type: \"boolean\", title: \"可见\" },\n+        id: { type: \"string\", title: \"唯一ID\", readOnly: true }\n+      }\n     },\n-    textAlign: {\n-      type: \"string\",\n-      title: \"对齐方式\",\n-      enum: [\"left\", \"center\", \"right\"],\n-      default: \"left\",\n-    },\n-    dataBinding: {\n+    commonProps: {\n       type: \"object\",\n-      title: \"数据绑定\",\n+      title: \"常用属性\",\n       properties: {\n-        source: { type: \"string\", title: \"数据源\" },\n-        field: { type: \"string\", title: \"字段\" },\n-        format: {\n+        text: { type: \"string\", title: \"文本内容\" },\n+        fontSize: { type: \"number\", title: \"字体大小\" },\n+        color: { type: \"string\", title: \"字体颜色\" },\n+        fontWeight: {\n           type: \"string\",\n-          title: \"格式化\",\n-          enum: [\"none\", \"currency\", \"date\", \"percent\"],\n-          default: \"none\",\n+          title: \"字体粗细\",\n+          enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"]\n         },\n-        expression: { type: \"string\", title: \"表达式\" },\n-      },\n+        textAlign: {\n+          type: \"string\",\n+          title: \"对齐方式\",\n+          enum: [\"left\", \"center\", \"right\"]\n+        }\n+      }\n     },\n-    mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n-    width: { type: \"number\", title: \"宽度(px)\", minimum: 20, default: 120 },\n-    height: { type: \"number\", title: \"高度(px)\", minimum: 20, default: 32 },\n-  },\n+    dataProps: {\n+      type: \"object\",\n+      title: \"数据属性\",\n+      properties: {\n+        dataBinding: {\n+          type: \"object\",\n+          title: \"数据绑定\",\n+          properties: {\n+            source: { type: \"string\", title: \"数据源\" },\n+            field: { type: \"string\", title: \"字段\" },\n+            format: {\n+              type: \"string\",\n+              title: \"格式化\",\n+              enum: [\"none\", \"currency\", \"date\", \"percent\"]\n+            },\n+            expression: { type: \"string\", title: \"表达式\" }\n+          }\n+        },\n+        mockData: { type: \"string\", title: \"Mock数据（JSON）\" }\n+      }\n+    }\n+  }\n };\n"
                },
                {
                    "date": 1747128621906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n         width: { type: \"number\", title: \"宽度\" },\n         height: { type: \"number\", title: \"高度\" },\n         locked: { type: \"boolean\", title: \"锁定\" },\n         visible: { type: \"boolean\", title: \"可见\" },\n-        id: { type: \"string\", title: \"唯一ID\", readOnly: true }\n-      }\n+        id: { type: \"string\", title: \"唯一ID\", readOnly: true },\n+      },\n     },\n     commonProps: {\n       type: \"object\",\n       title: \"常用属性\",\n@@ -26,16 +26,16 @@\n         color: { type: \"string\", title: \"字体颜色\" },\n         fontWeight: {\n           type: \"string\",\n           title: \"字体粗细\",\n-          enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"]\n+          enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n         },\n         textAlign: {\n           type: \"string\",\n           title: \"对齐方式\",\n-          enum: [\"left\", \"center\", \"right\"]\n-        }\n-      }\n+          enum: [\"left\", \"center\", \"right\"],\n+        },\n+      },\n     },\n     dataProps: {\n       type: \"object\",\n       title: \"数据属性\",\n@@ -48,14 +48,14 @@\n             field: { type: \"string\", title: \"字段\" },\n             format: {\n               type: \"string\",\n               title: \"格式化\",\n-              enum: [\"none\", \"currency\", \"date\", \"percent\"]\n+              enum: [\"none\", \"currency\", \"date\", \"percent\"],\n             },\n-            expression: { type: \"string\", title: \"表达式\" }\n-          }\n+            expression: { type: \"string\", title: \"表达式\" },\n+          },\n         },\n-        mockData: { type: \"string\", title: \"Mock数据（JSON）\" }\n-      }\n-    }\n-  }\n+        mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n+      },\n+    },\n+  },\n };\n"
                },
                {
                    "date": 1747128631075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-import { JSONSchema7 } from \"json-schema\";\n-\n export const textComponentSchema = {\n   type: \"object\",\n   properties: {\n     baseProps: {\n"
                },
                {
                    "date": 1747140557919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,22 +37,16 @@\n     dataProps: {\n       type: \"object\",\n       title: \"数据属性\",\n       properties: {\n-        dataBinding: {\n-          type: \"object\",\n-          title: \"数据绑定\",\n-          properties: {\n-            source: { type: \"string\", title: \"数据源\" },\n-            field: { type: \"string\", title: \"字段\" },\n-            format: {\n-              type: \"string\",\n-              title: \"格式化\",\n-              enum: [\"none\", \"currency\", \"date\", \"percent\"],\n-            },\n-            expression: { type: \"string\", title: \"表达式\" },\n-          },\n+        source: { type: \"string\", title: \"数据源\" },\n+        field: { type: \"string\", title: \"字段\" },\n+        format: {\n+          type: \"string\",\n+          title: \"格式化\",\n+          enum: [\"none\", \"currency\", \"date\", \"percent\"],\n         },\n+        expression: { type: \"string\", title: \"表达式\" },\n         mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n       },\n     },\n   },\n"
                },
                {
                    "date": 1747144856764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,4 +50,155 @@\n       },\n     },\n   },\n };\n+\n+export const basePropsSchema = {\n+  type: \"object\",\n+  properties: {\n+    name: {\n+      type: \"string\",\n+      title: \"名称\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    x: {\n+      type: \"number\",\n+      title: \"X\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    y: {\n+      type: \"number\",\n+      title: \"Y\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    width: {\n+      type: \"number\",\n+      title: \"宽度\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    height: {\n+      type: \"number\",\n+      title: \"高度\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    locked: {\n+      type: \"boolean\",\n+      title: \"锁定\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"是\", value: true },\n+        { label: \"否\", value: false },\n+      ],\n+    },\n+    visible: {\n+      type: \"boolean\",\n+      title: \"可见\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"是\", value: true },\n+        { label: \"否\", value: false },\n+      ],\n+    },\n+  },\n+};\n+\n+export const commonPropsSchema = {\n+  type: \"object\",\n+  properties: {\n+    text: {\n+      type: \"string\",\n+      title: \"文本\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    fontSize: {\n+      type: \"number\",\n+      title: \"字号\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    color: {\n+      type: \"string\",\n+      title: \"颜色\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    fontWeight: {\n+      type: \"string\",\n+      title: \"加粗\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"正常\", value: \"normal\" },\n+        { label: \"加粗\", value: \"bold\" },\n+      ],\n+    },\n+    textAlign: {\n+      type: \"string\",\n+      title: \"对齐\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"左对齐\", value: \"left\" },\n+        { label: \"居中\", value: \"center\" },\n+        { label: \"右对齐\", value: \"right\" },\n+      ],\n+    },\n+  },\n+};\n+\n+export const dataPropsSchema = (fields: string[]) => ({\n+  type: \"object\",\n+  properties: {\n+    source: {\n+      type: \"string\",\n+      title: \"数据源\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"Posts\", value: \"posts\" },\n+        { label: \"Comments\", value: \"comments\" },\n+        { label: \"Albums\", value: \"albums\" },\n+        { label: \"Photos\", value: \"photos\" },\n+        { label: \"Todos\", value: \"todos\" },\n+        { label: \"Users\", value: \"users\" },\n+      ],\n+    },\n+    field: {\n+      type: \"string\",\n+      title: \"字段\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: fields.map((f) => ({ label: f, value: f })),\n+    },\n+    format: {\n+      type: \"string\",\n+      title: \"格式化\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"无\", value: \"none\" },\n+        { label: \"千分位\", value: \"thousand\" },\n+        { label: \"百分比\", value: \"percent\" },\n+      ],\n+    },\n+    expression: {\n+      type: \"string\",\n+      title: \"表达式\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    mockData: {\n+      type: \"string\",\n+      title: \"Mock数据\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"TextArea\",\n+    },\n+  },\n+});\n"
                },
                {
                    "date": 1747145017592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,204 +0,0 @@\n-export const textComponentSchema = {\n-  type: \"object\",\n-  properties: {\n-    baseProps: {\n-      type: \"object\",\n-      title: \"基本属性\",\n-      properties: {\n-        name: { type: \"string\", title: \"组件名称\" },\n-        x: { type: \"number\", title: \"X\" },\n-        y: { type: \"number\", title: \"Y\" },\n-        width: { type: \"number\", title: \"宽度\" },\n-        height: { type: \"number\", title: \"高度\" },\n-        locked: { type: \"boolean\", title: \"锁定\" },\n-        visible: { type: \"boolean\", title: \"可见\" },\n-        id: { type: \"string\", title: \"唯一ID\", readOnly: true },\n-      },\n-    },\n-    commonProps: {\n-      type: \"object\",\n-      title: \"常用属性\",\n-      properties: {\n-        text: { type: \"string\", title: \"文本内容\" },\n-        fontSize: { type: \"number\", title: \"字体大小\" },\n-        color: { type: \"string\", title: \"字体颜色\" },\n-        fontWeight: {\n-          type: \"string\",\n-          title: \"字体粗细\",\n-          enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n-        },\n-        textAlign: {\n-          type: \"string\",\n-          title: \"对齐方式\",\n-          enum: [\"left\", \"center\", \"right\"],\n-        },\n-      },\n-    },\n-    dataProps: {\n-      type: \"object\",\n-      title: \"数据属性\",\n-      properties: {\n-        source: { type: \"string\", title: \"数据源\" },\n-        field: { type: \"string\", title: \"字段\" },\n-        format: {\n-          type: \"string\",\n-          title: \"格式化\",\n-          enum: [\"none\", \"currency\", \"date\", \"percent\"],\n-        },\n-        expression: { type: \"string\", title: \"表达式\" },\n-        mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n-      },\n-    },\n-  },\n-};\n-\n-export const basePropsSchema = {\n-  type: \"object\",\n-  properties: {\n-    name: {\n-      type: \"string\",\n-      title: \"名称\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    x: {\n-      type: \"number\",\n-      title: \"X\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    y: {\n-      type: \"number\",\n-      title: \"Y\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    width: {\n-      type: \"number\",\n-      title: \"宽度\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    height: {\n-      type: \"number\",\n-      title: \"高度\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    locked: {\n-      type: \"boolean\",\n-      title: \"锁定\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"是\", value: true },\n-        { label: \"否\", value: false },\n-      ],\n-    },\n-    visible: {\n-      type: \"boolean\",\n-      title: \"可见\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"是\", value: true },\n-        { label: \"否\", value: false },\n-      ],\n-    },\n-  },\n-};\n-\n-export const commonPropsSchema = {\n-  type: \"object\",\n-  properties: {\n-    text: {\n-      type: \"string\",\n-      title: \"文本\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    fontSize: {\n-      type: \"number\",\n-      title: \"字号\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    color: {\n-      type: \"string\",\n-      title: \"颜色\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    fontWeight: {\n-      type: \"string\",\n-      title: \"加粗\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"正常\", value: \"normal\" },\n-        { label: \"加粗\", value: \"bold\" },\n-      ],\n-    },\n-    textAlign: {\n-      type: \"string\",\n-      title: \"对齐\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"左对齐\", value: \"left\" },\n-        { label: \"居中\", value: \"center\" },\n-        { label: \"右对齐\", value: \"right\" },\n-      ],\n-    },\n-  },\n-};\n-\n-export const dataPropsSchema = (fields: string[]) => ({\n-  type: \"object\",\n-  properties: {\n-    source: {\n-      type: \"string\",\n-      title: \"数据源\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"Posts\", value: \"posts\" },\n-        { label: \"Comments\", value: \"comments\" },\n-        { label: \"Albums\", value: \"albums\" },\n-        { label: \"Photos\", value: \"photos\" },\n-        { label: \"Todos\", value: \"todos\" },\n-        { label: \"Users\", value: \"users\" },\n-      ],\n-    },\n-    field: {\n-      type: \"string\",\n-      title: \"字段\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: fields.map((f) => ({ label: f, value: f })),\n-    },\n-    format: {\n-      type: \"string\",\n-      title: \"格式化\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"无\", value: \"none\" },\n-        { label: \"千分位\", value: \"thousand\" },\n-        { label: \"百分比\", value: \"percent\" },\n-      ],\n-    },\n-    expression: {\n-      type: \"string\",\n-      title: \"表达式\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    mockData: {\n-      type: \"string\",\n-      title: \"Mock数据\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"TextArea\",\n-    },\n-  },\n-});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747145143032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,150 @@\n-import { JSONSchema7 } from \"json-schema\";\n+export const basePropsSchema = {\n+  type: \"object\",\n+  properties: {\n+    name: {\n+      type: \"string\",\n+      title: \"名称\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    x: {\n+      type: \"number\",\n+      title: \"X\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    y: {\n+      type: \"number\",\n+      title: \"Y\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    width: {\n+      type: \"number\",\n+      title: \"宽度\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    height: {\n+      type: \"number\",\n+      title: \"高度\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    locked: {\n+      type: \"boolean\",\n+      title: \"锁定\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"是\", value: true },\n+        { label: \"否\", value: false },\n+      ],\n+    },\n+    visible: {\n+      type: \"boolean\",\n+      title: \"可见\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"是\", value: true },\n+        { label: \"否\", value: false },\n+      ],\n+    },\n+  },\n+};\n \n-export const textComponentSchema: JSONSchema7 = {\n+export const commonPropsSchema = {\n   type: \"object\",\n   properties: {\n-    name: { type: \"string\", title: \"组件名称\" },\n-    text: { type: \"string\", title: \"文本内容\" },\n-    fontSize: { type: \"number\", title: \"字体大小\", default: 14 },\n-    color: { type: \"string\", title: \"字体颜色\", default: \"#222222\" },\n+    text: {\n+      type: \"string\",\n+      title: \"文本\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    fontSize: {\n+      type: \"number\",\n+      title: \"字号\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"NumberPicker\",\n+    },\n+    color: {\n+      type: \"string\",\n+      title: \"颜色\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n     fontWeight: {\n       type: \"string\",\n-      title: \"字体粗细\",\n-      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n-      default: \"normal\",\n+      title: \"加粗\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"正常\", value: \"normal\" },\n+        { label: \"加粗\", value: \"bold\" },\n+      ],\n     },\n     textAlign: {\n       type: \"string\",\n-      title: \"对齐方式\",\n-      enum: [\"left\", \"center\", \"right\"],\n-      default: \"left\",\n+      title: \"对齐\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"左对齐\", value: \"left\" },\n+        { label: \"居中\", value: \"center\" },\n+        { label: \"右对齐\", value: \"right\" },\n+      ],\n     },\n-    dataBinding: {\n-      type: \"object\",\n-      title: \"数据绑定\",\n-      properties: {\n-        source: { type: \"string\", title: \"数据源\" },\n-        field: { type: \"string\", title: \"字段\" },\n-        format: {\n-          type: \"string\",\n-          title: \"格式化\",\n-          enum: [\"none\", \"currency\", \"date\", \"percent\"],\n-          default: \"none\",\n-        },\n-        expression: { type: \"string\", title: \"表达式\" },\n-      },\n+  },\n+};\n+\n+export const dataPropsSchema = (fields: string[]) => ({\n+  type: \"object\",\n+  properties: {\n+    source: {\n+      type: \"string\",\n+      title: \"数据源\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"Posts\", value: \"posts\" },\n+        { label: \"Comments\", value: \"comments\" },\n+        { label: \"Albums\", value: \"albums\" },\n+        { label: \"Photos\", value: \"photos\" },\n+        { label: \"Todos\", value: \"todos\" },\n+        { label: \"Users\", value: \"users\" },\n+      ],\n     },\n-    mockData: { type: \"string\", title: \"Mock数据（JSON）\" },\n-    width: { type: \"number\", title: \"宽度(px)\", minimum: 20, default: 120 },\n-    height: { type: \"number\", title: \"高度(px)\", minimum: 20, default: 32 },\n+    field: {\n+      type: \"string\",\n+      title: \"字段\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: fields.map((f) => ({ label: f, value: f })),\n+    },\n+    format: {\n+      type: \"string\",\n+      title: \"格式化\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Select\",\n+      enum: [\n+        { label: \"无\", value: \"none\" },\n+        { label: \"千分位\", value: \"thousand\" },\n+        { label: \"百分比\", value: \"percent\" },\n+      ],\n+    },\n+    expression: {\n+      type: \"string\",\n+      title: \"表达式\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"Input\",\n+    },\n+    mockData: {\n+      type: \"string\",\n+      title: \"Mock数据\",\n+      \"x-decorator\": \"FormItem\",\n+      \"x-component\": \"TextArea\",\n+    },\n   },\n-};\n+});\n"
                },
                {
                    "date": 1747182399138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,150 +1,56 @@\n+// 文本组件 schema，rjsf 扁平化三段式\n export const basePropsSchema = {\n   type: \"object\",\n   properties: {\n-    name: {\n-      type: \"string\",\n-      title: \"名称\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    x: {\n-      type: \"number\",\n-      title: \"X\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    y: {\n-      type: \"number\",\n-      title: \"Y\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    width: {\n-      type: \"number\",\n-      title: \"宽度\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    height: {\n-      type: \"number\",\n-      title: \"高度\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    locked: {\n-      type: \"boolean\",\n-      title: \"锁定\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"是\", value: true },\n-        { label: \"否\", value: false },\n-      ],\n-    },\n-    visible: {\n-      type: \"boolean\",\n-      title: \"可见\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"是\", value: true },\n-        { label: \"否\", value: false },\n-      ],\n-    },\n-  },\n+    id: { type: \"string\", title: \"唯一标识\", readOnly: true },\n+    x: { type: \"number\", title: \"X 坐标\" },\n+    y: { type: \"number\", title: \"Y 坐标\" },\n+    width: { type: \"number\", title: \"宽度\" },\n+    height: { type: \"number\", title: \"高度\" },\n+    locked: { type: \"boolean\", title: \"锁定\" },\n+    visible: { type: \"boolean\", title: \"可见\", default: true }\n+  }\n };\n \n export const commonPropsSchema = {\n   type: \"object\",\n   properties: {\n-    text: {\n-      type: \"string\",\n-      title: \"文本\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    fontSize: {\n-      type: \"number\",\n-      title: \"字号\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"NumberPicker\",\n-    },\n-    color: {\n-      type: \"string\",\n-      title: \"颜色\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n+    text: { type: \"string\", title: \"文本内容\" },\n+    fontSize: { type: \"number\", title: \"字号\", default: 16 },\n+    color: { type: \"string\", title: \"颜色\", default: \"#222\" },\n     fontWeight: {\n       type: \"string\",\n       title: \"加粗\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"正常\", value: \"normal\" },\n-        { label: \"加粗\", value: \"bold\" },\n-      ],\n+      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\n+      default: \"normal\"\n     },\n     textAlign: {\n       type: \"string\",\n-      title: \"对齐\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"左对齐\", value: \"left\" },\n-        { label: \"居中\", value: \"center\" },\n-        { label: \"右对齐\", value: \"right\" },\n-      ],\n-    },\n-  },\n+      title: \"对齐方式\",\n+      enum: [\"left\", \"center\", \"right\"],\n+      default: \"left\"\n+    }\n+  }\n };\n \n-export const dataPropsSchema = (fields: string[]) => ({\n+export const dataPropsSchema = {\n   type: \"object\",\n   properties: {\n-    source: {\n-      type: \"string\",\n-      title: \"数据源\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"Posts\", value: \"posts\" },\n-        { label: \"Comments\", value: \"comments\" },\n-        { label: \"Albums\", value: \"albums\" },\n-        { label: \"Photos\", value: \"photos\" },\n-        { label: \"Todos\", value: \"todos\" },\n-        { label: \"Users\", value: \"users\" },\n-      ],\n-    },\n-    field: {\n-      type: \"string\",\n-      title: \"字段\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: fields.map((f) => ({ label: f, value: f })),\n-    },\n+    source: { type: \"string\", title: \"数据源\" },\n+    field: { type: \"string\", title: \"字段\" },\n     format: {\n       type: \"string\",\n       title: \"格式化\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Select\",\n-      enum: [\n-        { label: \"无\", value: \"none\" },\n-        { label: \"千分位\", value: \"thousand\" },\n-        { label: \"百分比\", value: \"percent\" },\n-      ],\n+      enum: [\"none\", \"currency\", \"date\", \"percent\"],\n+      default: \"none\"\n     },\n-    expression: {\n-      type: \"string\",\n-      title: \"表达式\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"Input\",\n-    },\n-    mockData: {\n-      type: \"string\",\n-      title: \"Mock数据\",\n-      \"x-decorator\": \"FormItem\",\n-      \"x-component\": \"TextArea\",\n-    },\n-  },\n-});\n+    expression: { type: \"string\", title: \"表达式\" },\n+    mockData: { type: \"object\", title: \"Mock数据\" }\n+  }\n+};\n+\n+export default {\n+  basePropsSchema,\n+  commonPropsSchema,\n+  dataPropsSchema\n+};\n"
                }
            ],
            "date": 1747090574033,
            "name": "Commit-0",
            "content": "import { JSONSchema7 } from \"json-schema\";\r\n\r\nexport const textComponentSchema: JSONSchema7 = {\r\n  type: \"object\",\r\n  properties: {\r\n    name: { type: \"string\", title: \"组件名称\" },\r\n    text: { type: \"string\", title: \"文本内容\" },\r\n    fontSize: { type: \"number\", title: \"字体大小\", default: 14 },\r\n    color: { type: \"string\", title: \"字体颜色\", default: \"#222222\" },\r\n    fontWeight: {\r\n      type: \"string\",\r\n      title: \"字体粗细\",\r\n      enum: [\"normal\", \"bold\", \"bolder\", \"lighter\"],\r\n      default: \"normal\"\r\n    },\r\n    textAlign: {\r\n      type: \"string\",\r\n      title: \"对齐方式\",\r\n      enum: [\"left\", \"center\", \"right\"],\r\n      default: \"left\"\r\n    },\r\n    dataBinding: {\r\n      type: \"object\",\r\n      title: \"数据绑定\",\r\n      properties: {\r\n        source: { type: \"string\", title: \"数据源\" },\r\n        field: { type: \"string\", title: \"字段\" },\r\n        format: {\r\n          type: \"string\",\r\n          title: \"格式化\",\r\n          enum: [\"none\", \"currency\", \"date\", \"percent\"],\r\n          default: \"none\"\r\n        },\r\n        expression: { type: \"string\", title: \"表达式\" }\r\n      }\r\n    }\r\n  }\r\n}; "
        }
    ]
}