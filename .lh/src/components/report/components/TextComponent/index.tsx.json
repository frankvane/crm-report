{
    "sourceFile": "src/components/report/components/TextComponent/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1747022350265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747022402534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React from 'react';\r\n+import React from \"react\";\r\n \r\n const TextComponent: React.FC = () => {\r\n   return <div>文本组件</div>;\r\n };\r\n \r\n\\ No newline at end of file\n-export default TextComponent; \n+export default TextComponent;\r\n"
                },
                {
                    "date": 1747022408717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n const TextComponent: React.FC = () => {\r\n   return <div>文本组件</div>;\r\n };\r\n \r\n-export default TextComponent;\n\\ No newline at end of file\n+export default TextComponent;\r\n"
                },
                {
                    "date": 1747089678689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,42 @@\n import React from \"react\";\r\n \r\n-const TextComponent: React.FC = () => {\r\n-  return <div>文本组件</div>;\r\n+export interface TextComponentProps {\r\n+  text: string;\r\n+  fontSize?: number;\r\n+  color?: string;\r\n+  fontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\";\r\n+  textAlign?: \"left\" | \"center\" | \"right\";\r\n+  dataBinding?: {\r\n+    source?: string;\r\n+    field?: string;\r\n+    format?: \"none\" | \"currency\" | \"date\" | \"percent\";\r\n+    expression?: string;\r\n+  };\r\n+}\r\n+\r\n+const TextComponent: React.FC<TextComponentProps> = ({\r\n+  text,\r\n+  fontSize = 14,\r\n+  color = \"#222\",\r\n+  fontWeight = \"normal\",\r\n+  textAlign = \"left\",\r\n+}) => {\r\n+  return (\r\n+    <div\r\n+      style={{\r\n+        fontSize,\r\n+        color,\r\n+        fontWeight,\r\n+        textAlign,\r\n+        width: \"100%\",\r\n+        height: \"100%\",\r\n+        overflow: \"hidden\",\r\n+        whiteSpace: \"pre-line\",\r\n+      }}\r\n+    >\r\n+      {text}\r\n+    </div>\r\n+  );\r\n };\r\n \r\n export default TextComponent;\r\n"
                },
                {
                    "date": 1747091356215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,16 +11,66 @@\n     field?: string;\r\n     format?: \"none\" | \"currency\" | \"date\" | \"percent\";\r\n     expression?: string;\r\n   };\r\n+  mockData?: object;\r\n }\r\n \r\n+function formatValue(value: any, format?: string) {\r\n+  if (format === \"currency\") {\r\n+    return Number(value).toLocaleString(\"zh-CN\", { style: \"currency\", currency: \"CNY\" });\r\n+  }\r\n+  if (format === \"date\") {\r\n+    return new Date(value).toLocaleDateString();\r\n+  }\r\n+  if (format === \"percent\") {\r\n+    return (Number(value) * 100).toFixed(2) + \"%\";\r\n+  }\r\n+  return value;\r\n+}\r\n+\r\n+function renderText({ text, dataBinding, mockData }: Pick<TextComponentProps, \"text\" | \"dataBinding\" | \"mockData\">) {\r\n+  if (dataBinding && mockData) {\r\n+    // 1. 表达式优先\r\n+    if (dataBinding.expression) {\r\n+      try {\r\n+        // eslint-disable-next-line no-new-func\r\n+        const fn = new Function(...Object.keys(mockData), `return ${dataBinding.expression}`);\r\n+        const result = fn(...Object.values(mockData));\r\n+        return formatValue(result, dataBinding.format);\r\n+      } catch {\r\n+        return \"表达式错误\";\r\n+      }\r\n+    }\r\n+    // 2. 字段绑定\r\n+    if (dataBinding.field && mockData[dataBinding.field] !== undefined) {\r\n+      return formatValue(mockData[dataBinding.field], dataBinding.format);\r\n+    }\r\n+    // 3. 占位符替换\r\n+    if (text) {\r\n+      return text.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) =>\r\n+        mockData[key] !== undefined ? mockData[key] : \"\"\r\n+      );\r\n+    }\r\n+  }\r\n+  // 4. 仅占位符替换\r\n+  if (text && mockData) {\r\n+    return text.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) =>\r\n+      mockData[key] !== undefined ? mockData[key] : \"\"\r\n+    );\r\n+  }\r\n+  // 5. 静态文本\r\n+  return text;\r\n+}\r\n+\r\n const TextComponent: React.FC<TextComponentProps> = ({\r\n   text,\r\n   fontSize = 14,\r\n   color = \"#222\",\r\n   fontWeight = \"normal\",\r\n   textAlign = \"left\",\r\n+  dataBinding,\r\n+  mockData,\r\n }) => {\r\n   return (\r\n     <div\r\n       style={{\r\n@@ -33,9 +83,9 @@\n         overflow: \"hidden\",\r\n         whiteSpace: \"pre-line\",\r\n       }}\r\n     >\r\n-      {text}\r\n+      {renderText({ text, dataBinding, mockData })}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747091368458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   };\r\n   mockData?: object;\r\n }\r\n \r\n-function formatValue(value: any, format?: string) {\r\n+function formatValue(value: unknown, format?: string) {\r\n   if (format === \"currency\") {\r\n     return Number(value).toLocaleString(\"zh-CN\", {\r\n       style: \"currency\",\r\n       currency: \"CNY\",\r\n@@ -35,38 +35,39 @@\n   text,\r\n   dataBinding,\r\n   mockData,\r\n }: Pick<TextComponentProps, \"text\" | \"dataBinding\" | \"mockData\">) {\r\n+  const data: Record<string, unknown> = mockData || {};\r\n   if (dataBinding && mockData) {\r\n     // 1. 表达式优先\r\n     if (dataBinding.expression) {\r\n       try {\r\n         // eslint-disable-next-line no-new-func\r\n         const fn = new Function(\r\n-          ...Object.keys(mockData),\r\n+          ...Object.keys(data),\r\n           `return ${dataBinding.expression}`\r\n         );\r\n-        const result = fn(...Object.values(mockData));\r\n+        const result = fn(...Object.values(data));\r\n         return formatValue(result, dataBinding.format);\r\n       } catch {\r\n         return \"表达式错误\";\r\n       }\r\n     }\r\n     // 2. 字段绑定\r\n-    if (dataBinding.field && mockData[dataBinding.field] !== undefined) {\r\n-      return formatValue(mockData[dataBinding.field], dataBinding.format);\r\n+    if (dataBinding.field && data[dataBinding.field as string] !== undefined) {\r\n+      return formatValue(data[dataBinding.field as string], dataBinding.format);\r\n     }\r\n     // 3. 占位符替换\r\n     if (text) {\r\n       return text.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) =>\r\n-        mockData[key] !== undefined ? mockData[key] : \"\"\r\n+        data[key] !== undefined ? String(data[key]) : \"\"\r\n       );\r\n     }\r\n   }\r\n   // 4. 仅占位符替换\r\n   if (text && mockData) {\r\n     return text.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) =>\r\n-      mockData[key] !== undefined ? mockData[key] : \"\"\r\n+      data[key] !== undefined ? String(data[key]) : \"\"\r\n     );\r\n   }\r\n   // 5. 静态文本\r\n   return text;\r\n"
                },
                {
                    "date": 1747091378964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n       currency: \"CNY\",\r\n     });\r\n   }\r\n   if (format === \"date\") {\r\n-    return new Date(value).toLocaleDateString();\r\n+    return new Date(String(value)).toLocaleDateString();\r\n   }\r\n   if (format === \"percent\") {\r\n     return (Number(value) * 100).toFixed(2) + \"%\";\r\n   }\r\n@@ -35,9 +35,9 @@\n   text,\r\n   dataBinding,\r\n   mockData,\r\n }: Pick<TextComponentProps, \"text\" | \"dataBinding\" | \"mockData\">) {\r\n-  const data: Record<string, unknown> = mockData || {};\r\n+  const data: Record<string, unknown> = (mockData as Record<string, unknown>) || {};\r\n   if (dataBinding && mockData) {\r\n     // 1. 表达式优先\r\n     if (dataBinding.expression) {\r\n       try {\r\n@@ -69,9 +69,9 @@\n       data[key] !== undefined ? String(data[key]) : \"\"\r\n     );\r\n   }\r\n   // 5. 静态文本\r\n-  return text;\r\n+  return String(text);\r\n }\r\n \r\n const TextComponent: React.FC<TextComponentProps> = ({\r\n   text,\r\n@@ -94,9 +94,9 @@\n         overflow: \"hidden\",\r\n         whiteSpace: \"pre-line\",\r\n       }}\r\n     >\r\n-      {renderText({ text, dataBinding, mockData })}\r\n+      {String(renderText({ text, dataBinding, mockData }))}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                }
            ],
            "date": 1747022350265,
            "name": "Commit-0",
            "content": "import React from 'react';\r\n\r\nconst TextComponent: React.FC = () => {\r\n  return <div>文本组件</div>;\r\n};\r\n\r\nexport default TextComponent; "
        }
    ]
}